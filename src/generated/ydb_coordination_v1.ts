/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 0.0.0
 * source: ydb_coordination_v1.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./protos/ydb_coordination";
import * as grpc_1 from "@grpc/grpc-js";
export namespace Ydb.Coordination.V1 {
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedCoordinationServiceService {
        static definition = {
            Session: {
                path: "/Ydb.Coordination.V1.CoordinationService/Session",
                requestStream: true,
                responseStream: true,
                requestSerialize: (message: dependency_1.Ydb.Coordination.SessionRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.Ydb.Coordination.SessionRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.Ydb.Coordination.SessionResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.Ydb.Coordination.SessionResponse.deserialize(new Uint8Array(bytes))
            },
            CreateNode: {
                path: "/Ydb.Coordination.V1.CoordinationService/CreateNode",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.Ydb.Coordination.CreateNodeRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.Ydb.Coordination.CreateNodeRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.Ydb.Coordination.CreateNodeResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.Ydb.Coordination.CreateNodeResponse.deserialize(new Uint8Array(bytes))
            },
            AlterNode: {
                path: "/Ydb.Coordination.V1.CoordinationService/AlterNode",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.Ydb.Coordination.AlterNodeRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.Ydb.Coordination.AlterNodeRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.Ydb.Coordination.AlterNodeResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.Ydb.Coordination.AlterNodeResponse.deserialize(new Uint8Array(bytes))
            },
            DropNode: {
                path: "/Ydb.Coordination.V1.CoordinationService/DropNode",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.Ydb.Coordination.DropNodeRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.Ydb.Coordination.DropNodeRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.Ydb.Coordination.DropNodeResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.Ydb.Coordination.DropNodeResponse.deserialize(new Uint8Array(bytes))
            },
            DescribeNode: {
                path: "/Ydb.Coordination.V1.CoordinationService/DescribeNode",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.Ydb.Coordination.DescribeNodeRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.Ydb.Coordination.DescribeNodeRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.Ydb.Coordination.DescribeNodeResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.Ydb.Coordination.DescribeNodeResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract Session(call: grpc_1.ServerDuplexStream<dependency_1.Ydb.Coordination.SessionRequest, dependency_1.Ydb.Coordination.SessionResponse>): void;
        abstract CreateNode(call: grpc_1.ServerUnaryCall<dependency_1.Ydb.Coordination.CreateNodeRequest, dependency_1.Ydb.Coordination.CreateNodeResponse>, callback: grpc_1.sendUnaryData<dependency_1.Ydb.Coordination.CreateNodeResponse>): void;
        abstract AlterNode(call: grpc_1.ServerUnaryCall<dependency_1.Ydb.Coordination.AlterNodeRequest, dependency_1.Ydb.Coordination.AlterNodeResponse>, callback: grpc_1.sendUnaryData<dependency_1.Ydb.Coordination.AlterNodeResponse>): void;
        abstract DropNode(call: grpc_1.ServerUnaryCall<dependency_1.Ydb.Coordination.DropNodeRequest, dependency_1.Ydb.Coordination.DropNodeResponse>, callback: grpc_1.sendUnaryData<dependency_1.Ydb.Coordination.DropNodeResponse>): void;
        abstract DescribeNode(call: grpc_1.ServerUnaryCall<dependency_1.Ydb.Coordination.DescribeNodeRequest, dependency_1.Ydb.Coordination.DescribeNodeResponse>, callback: grpc_1.sendUnaryData<dependency_1.Ydb.Coordination.DescribeNodeResponse>): void;
    }
    export class CoordinationServiceClient extends grpc_1.makeGenericClientConstructor(UnimplementedCoordinationServiceService.definition, "CoordinationService", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        Session: GrpcChunkServiceInterface<dependency_1.Ydb.Coordination.SessionRequest, dependency_1.Ydb.Coordination.SessionResponse> = (metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<dependency_1.Ydb.Coordination.SessionRequest, dependency_1.Ydb.Coordination.SessionResponse> => {
            return super.Session(metadata, options);
        };
        CreateNode: GrpcUnaryServiceInterface<dependency_1.Ydb.Coordination.CreateNodeRequest, dependency_1.Ydb.Coordination.CreateNodeResponse> = (message: dependency_1.Ydb.Coordination.CreateNodeRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Coordination.CreateNodeResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Coordination.CreateNodeResponse>, callback?: grpc_1.requestCallback<dependency_1.Ydb.Coordination.CreateNodeResponse>): grpc_1.ClientUnaryCall => {
            return super.CreateNode(message, metadata, options, callback);
        };
        AlterNode: GrpcUnaryServiceInterface<dependency_1.Ydb.Coordination.AlterNodeRequest, dependency_1.Ydb.Coordination.AlterNodeResponse> = (message: dependency_1.Ydb.Coordination.AlterNodeRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Coordination.AlterNodeResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Coordination.AlterNodeResponse>, callback?: grpc_1.requestCallback<dependency_1.Ydb.Coordination.AlterNodeResponse>): grpc_1.ClientUnaryCall => {
            return super.AlterNode(message, metadata, options, callback);
        };
        DropNode: GrpcUnaryServiceInterface<dependency_1.Ydb.Coordination.DropNodeRequest, dependency_1.Ydb.Coordination.DropNodeResponse> = (message: dependency_1.Ydb.Coordination.DropNodeRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Coordination.DropNodeResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Coordination.DropNodeResponse>, callback?: grpc_1.requestCallback<dependency_1.Ydb.Coordination.DropNodeResponse>): grpc_1.ClientUnaryCall => {
            return super.DropNode(message, metadata, options, callback);
        };
        DescribeNode: GrpcUnaryServiceInterface<dependency_1.Ydb.Coordination.DescribeNodeRequest, dependency_1.Ydb.Coordination.DescribeNodeResponse> = (message: dependency_1.Ydb.Coordination.DescribeNodeRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Coordination.DescribeNodeResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Coordination.DescribeNodeResponse>, callback?: grpc_1.requestCallback<dependency_1.Ydb.Coordination.DescribeNodeResponse>): grpc_1.ClientUnaryCall => {
            return super.DescribeNode(message, metadata, options, callback);
        };
    }
}
