/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 0.0.0
 * source: protos/ydb_scheme.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./ydb_common";
import * as dependency_2 from "./ydb_operation";
import * as pb_1 from "google-protobuf";
export namespace Ydb.Scheme {
    export class MakeDirectoryRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation_params?: dependency_2.Ydb.Operations.OperationParams;
            path?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation_params" in data && data.operation_params != undefined) {
                    this.operation_params = data.operation_params;
                }
                if ("path" in data && data.path != undefined) {
                    this.path = data.path;
                }
            }
        }
        get operation_params() {
            return pb_1.Message.getWrapperField(this, dependency_2.Ydb.Operations.OperationParams, 1) as dependency_2.Ydb.Operations.OperationParams;
        }
        set operation_params(value: dependency_2.Ydb.Operations.OperationParams) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation_params() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get path() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set path(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            operation_params?: ReturnType<typeof dependency_2.Ydb.Operations.OperationParams.prototype.toObject>;
            path?: string;
        }): MakeDirectoryRequest {
            const message = new MakeDirectoryRequest({});
            if (data.operation_params != null) {
                message.operation_params = dependency_2.Ydb.Operations.OperationParams.fromObject(data.operation_params);
            }
            if (data.path != null) {
                message.path = data.path;
            }
            return message;
        }
        toObject() {
            const data: {
                operation_params?: ReturnType<typeof dependency_2.Ydb.Operations.OperationParams.prototype.toObject>;
                path?: string;
            } = {};
            if (this.operation_params != null) {
                data.operation_params = this.operation_params.toObject();
            }
            if (this.path != null) {
                data.path = this.path;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation_params)
                writer.writeMessage(1, this.operation_params, () => this.operation_params.serialize(writer));
            if (this.path.length)
                writer.writeString(2, this.path);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MakeDirectoryRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MakeDirectoryRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation_params, () => message.operation_params = dependency_2.Ydb.Operations.OperationParams.deserialize(reader));
                        break;
                    case 2:
                        message.path = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): MakeDirectoryRequest {
            return MakeDirectoryRequest.deserialize(bytes);
        }
    }
    export class MakeDirectoryResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation?: dependency_2.Ydb.Operations.Operation;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation" in data && data.operation != undefined) {
                    this.operation = data.operation;
                }
            }
        }
        get operation() {
            return pb_1.Message.getWrapperField(this, dependency_2.Ydb.Operations.Operation, 1) as dependency_2.Ydb.Operations.Operation;
        }
        set operation(value: dependency_2.Ydb.Operations.Operation) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data: {
            operation?: ReturnType<typeof dependency_2.Ydb.Operations.Operation.prototype.toObject>;
        }): MakeDirectoryResponse {
            const message = new MakeDirectoryResponse({});
            if (data.operation != null) {
                message.operation = dependency_2.Ydb.Operations.Operation.fromObject(data.operation);
            }
            return message;
        }
        toObject() {
            const data: {
                operation?: ReturnType<typeof dependency_2.Ydb.Operations.Operation.prototype.toObject>;
            } = {};
            if (this.operation != null) {
                data.operation = this.operation.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation)
                writer.writeMessage(1, this.operation, () => this.operation.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): MakeDirectoryResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new MakeDirectoryResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation, () => message.operation = dependency_2.Ydb.Operations.Operation.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): MakeDirectoryResponse {
            return MakeDirectoryResponse.deserialize(bytes);
        }
    }
    export class RemoveDirectoryRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation_params?: dependency_2.Ydb.Operations.OperationParams;
            path?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation_params" in data && data.operation_params != undefined) {
                    this.operation_params = data.operation_params;
                }
                if ("path" in data && data.path != undefined) {
                    this.path = data.path;
                }
            }
        }
        get operation_params() {
            return pb_1.Message.getWrapperField(this, dependency_2.Ydb.Operations.OperationParams, 1) as dependency_2.Ydb.Operations.OperationParams;
        }
        set operation_params(value: dependency_2.Ydb.Operations.OperationParams) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation_params() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get path() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set path(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            operation_params?: ReturnType<typeof dependency_2.Ydb.Operations.OperationParams.prototype.toObject>;
            path?: string;
        }): RemoveDirectoryRequest {
            const message = new RemoveDirectoryRequest({});
            if (data.operation_params != null) {
                message.operation_params = dependency_2.Ydb.Operations.OperationParams.fromObject(data.operation_params);
            }
            if (data.path != null) {
                message.path = data.path;
            }
            return message;
        }
        toObject() {
            const data: {
                operation_params?: ReturnType<typeof dependency_2.Ydb.Operations.OperationParams.prototype.toObject>;
                path?: string;
            } = {};
            if (this.operation_params != null) {
                data.operation_params = this.operation_params.toObject();
            }
            if (this.path != null) {
                data.path = this.path;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation_params)
                writer.writeMessage(1, this.operation_params, () => this.operation_params.serialize(writer));
            if (this.path.length)
                writer.writeString(2, this.path);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): RemoveDirectoryRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new RemoveDirectoryRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation_params, () => message.operation_params = dependency_2.Ydb.Operations.OperationParams.deserialize(reader));
                        break;
                    case 2:
                        message.path = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): RemoveDirectoryRequest {
            return RemoveDirectoryRequest.deserialize(bytes);
        }
    }
    export class RemoveDirectoryResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation?: dependency_2.Ydb.Operations.Operation;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation" in data && data.operation != undefined) {
                    this.operation = data.operation;
                }
            }
        }
        get operation() {
            return pb_1.Message.getWrapperField(this, dependency_2.Ydb.Operations.Operation, 1) as dependency_2.Ydb.Operations.Operation;
        }
        set operation(value: dependency_2.Ydb.Operations.Operation) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data: {
            operation?: ReturnType<typeof dependency_2.Ydb.Operations.Operation.prototype.toObject>;
        }): RemoveDirectoryResponse {
            const message = new RemoveDirectoryResponse({});
            if (data.operation != null) {
                message.operation = dependency_2.Ydb.Operations.Operation.fromObject(data.operation);
            }
            return message;
        }
        toObject() {
            const data: {
                operation?: ReturnType<typeof dependency_2.Ydb.Operations.Operation.prototype.toObject>;
            } = {};
            if (this.operation != null) {
                data.operation = this.operation.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation)
                writer.writeMessage(1, this.operation, () => this.operation.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): RemoveDirectoryResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new RemoveDirectoryResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation, () => message.operation = dependency_2.Ydb.Operations.Operation.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): RemoveDirectoryResponse {
            return RemoveDirectoryResponse.deserialize(bytes);
        }
    }
    export class ListDirectoryRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation_params?: dependency_2.Ydb.Operations.OperationParams;
            path?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation_params" in data && data.operation_params != undefined) {
                    this.operation_params = data.operation_params;
                }
                if ("path" in data && data.path != undefined) {
                    this.path = data.path;
                }
            }
        }
        get operation_params() {
            return pb_1.Message.getWrapperField(this, dependency_2.Ydb.Operations.OperationParams, 1) as dependency_2.Ydb.Operations.OperationParams;
        }
        set operation_params(value: dependency_2.Ydb.Operations.OperationParams) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation_params() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get path() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set path(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            operation_params?: ReturnType<typeof dependency_2.Ydb.Operations.OperationParams.prototype.toObject>;
            path?: string;
        }): ListDirectoryRequest {
            const message = new ListDirectoryRequest({});
            if (data.operation_params != null) {
                message.operation_params = dependency_2.Ydb.Operations.OperationParams.fromObject(data.operation_params);
            }
            if (data.path != null) {
                message.path = data.path;
            }
            return message;
        }
        toObject() {
            const data: {
                operation_params?: ReturnType<typeof dependency_2.Ydb.Operations.OperationParams.prototype.toObject>;
                path?: string;
            } = {};
            if (this.operation_params != null) {
                data.operation_params = this.operation_params.toObject();
            }
            if (this.path != null) {
                data.path = this.path;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation_params)
                writer.writeMessage(1, this.operation_params, () => this.operation_params.serialize(writer));
            if (this.path.length)
                writer.writeString(2, this.path);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ListDirectoryRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ListDirectoryRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation_params, () => message.operation_params = dependency_2.Ydb.Operations.OperationParams.deserialize(reader));
                        break;
                    case 2:
                        message.path = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ListDirectoryRequest {
            return ListDirectoryRequest.deserialize(bytes);
        }
    }
    export class ListDirectoryResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation?: dependency_2.Ydb.Operations.Operation;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation" in data && data.operation != undefined) {
                    this.operation = data.operation;
                }
            }
        }
        get operation() {
            return pb_1.Message.getWrapperField(this, dependency_2.Ydb.Operations.Operation, 1) as dependency_2.Ydb.Operations.Operation;
        }
        set operation(value: dependency_2.Ydb.Operations.Operation) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data: {
            operation?: ReturnType<typeof dependency_2.Ydb.Operations.Operation.prototype.toObject>;
        }): ListDirectoryResponse {
            const message = new ListDirectoryResponse({});
            if (data.operation != null) {
                message.operation = dependency_2.Ydb.Operations.Operation.fromObject(data.operation);
            }
            return message;
        }
        toObject() {
            const data: {
                operation?: ReturnType<typeof dependency_2.Ydb.Operations.Operation.prototype.toObject>;
            } = {};
            if (this.operation != null) {
                data.operation = this.operation.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation)
                writer.writeMessage(1, this.operation, () => this.operation.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ListDirectoryResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ListDirectoryResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation, () => message.operation = dependency_2.Ydb.Operations.Operation.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ListDirectoryResponse {
            return ListDirectoryResponse.deserialize(bytes);
        }
    }
    export class Permissions extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            subject?: string;
            permission_names?: string[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("subject" in data && data.subject != undefined) {
                    this.subject = data.subject;
                }
                if ("permission_names" in data && data.permission_names != undefined) {
                    this.permission_names = data.permission_names;
                }
            }
        }
        get subject() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set subject(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get permission_names() {
            return pb_1.Message.getFieldWithDefault(this, 2, []) as string[];
        }
        set permission_names(value: string[]) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            subject?: string;
            permission_names?: string[];
        }): Permissions {
            const message = new Permissions({});
            if (data.subject != null) {
                message.subject = data.subject;
            }
            if (data.permission_names != null) {
                message.permission_names = data.permission_names;
            }
            return message;
        }
        toObject() {
            const data: {
                subject?: string;
                permission_names?: string[];
            } = {};
            if (this.subject != null) {
                data.subject = this.subject;
            }
            if (this.permission_names != null) {
                data.permission_names = this.permission_names;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.subject.length)
                writer.writeString(1, this.subject);
            if (this.permission_names.length)
                writer.writeRepeatedString(2, this.permission_names);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Permissions {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Permissions();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.subject = reader.readString();
                        break;
                    case 2:
                        pb_1.Message.addToRepeatedField(message, 2, reader.readString());
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Permissions {
            return Permissions.deserialize(bytes);
        }
    }
    export class Entry extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            name?: string;
            owner?: string;
            type?: Entry.Type;
            effective_permissions?: Permissions[];
            permissions?: Permissions[];
            size_bytes?: number;
            created_at?: dependency_1.Ydb.VirtualTimestamp;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [6, 7], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("name" in data && data.name != undefined) {
                    this.name = data.name;
                }
                if ("owner" in data && data.owner != undefined) {
                    this.owner = data.owner;
                }
                if ("type" in data && data.type != undefined) {
                    this.type = data.type;
                }
                if ("effective_permissions" in data && data.effective_permissions != undefined) {
                    this.effective_permissions = data.effective_permissions;
                }
                if ("permissions" in data && data.permissions != undefined) {
                    this.permissions = data.permissions;
                }
                if ("size_bytes" in data && data.size_bytes != undefined) {
                    this.size_bytes = data.size_bytes;
                }
                if ("created_at" in data && data.created_at != undefined) {
                    this.created_at = data.created_at;
                }
            }
        }
        get name() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set name(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get owner() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set owner(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get type() {
            return pb_1.Message.getFieldWithDefault(this, 5, Entry.Type.TYPE_UNSPECIFIED) as Entry.Type;
        }
        set type(value: Entry.Type) {
            pb_1.Message.setField(this, 5, value);
        }
        get effective_permissions() {
            return pb_1.Message.getRepeatedWrapperField(this, Permissions, 6) as Permissions[];
        }
        set effective_permissions(value: Permissions[]) {
            pb_1.Message.setRepeatedWrapperField(this, 6, value);
        }
        get permissions() {
            return pb_1.Message.getRepeatedWrapperField(this, Permissions, 7) as Permissions[];
        }
        set permissions(value: Permissions[]) {
            pb_1.Message.setRepeatedWrapperField(this, 7, value);
        }
        get size_bytes() {
            return pb_1.Message.getFieldWithDefault(this, 8, 0) as number;
        }
        set size_bytes(value: number) {
            pb_1.Message.setField(this, 8, value);
        }
        get created_at() {
            return pb_1.Message.getWrapperField(this, dependency_1.Ydb.VirtualTimestamp, 9) as dependency_1.Ydb.VirtualTimestamp;
        }
        set created_at(value: dependency_1.Ydb.VirtualTimestamp) {
            pb_1.Message.setWrapperField(this, 9, value);
        }
        get has_created_at() {
            return pb_1.Message.getField(this, 9) != null;
        }
        static fromObject(data: {
            name?: string;
            owner?: string;
            type?: Entry.Type;
            effective_permissions?: ReturnType<typeof Permissions.prototype.toObject>[];
            permissions?: ReturnType<typeof Permissions.prototype.toObject>[];
            size_bytes?: number;
            created_at?: ReturnType<typeof dependency_1.Ydb.VirtualTimestamp.prototype.toObject>;
        }): Entry {
            const message = new Entry({});
            if (data.name != null) {
                message.name = data.name;
            }
            if (data.owner != null) {
                message.owner = data.owner;
            }
            if (data.type != null) {
                message.type = data.type;
            }
            if (data.effective_permissions != null) {
                message.effective_permissions = data.effective_permissions.map(item => Permissions.fromObject(item));
            }
            if (data.permissions != null) {
                message.permissions = data.permissions.map(item => Permissions.fromObject(item));
            }
            if (data.size_bytes != null) {
                message.size_bytes = data.size_bytes;
            }
            if (data.created_at != null) {
                message.created_at = dependency_1.Ydb.VirtualTimestamp.fromObject(data.created_at);
            }
            return message;
        }
        toObject() {
            const data: {
                name?: string;
                owner?: string;
                type?: Entry.Type;
                effective_permissions?: ReturnType<typeof Permissions.prototype.toObject>[];
                permissions?: ReturnType<typeof Permissions.prototype.toObject>[];
                size_bytes?: number;
                created_at?: ReturnType<typeof dependency_1.Ydb.VirtualTimestamp.prototype.toObject>;
            } = {};
            if (this.name != null) {
                data.name = this.name;
            }
            if (this.owner != null) {
                data.owner = this.owner;
            }
            if (this.type != null) {
                data.type = this.type;
            }
            if (this.effective_permissions != null) {
                data.effective_permissions = this.effective_permissions.map((item: Permissions) => item.toObject());
            }
            if (this.permissions != null) {
                data.permissions = this.permissions.map((item: Permissions) => item.toObject());
            }
            if (this.size_bytes != null) {
                data.size_bytes = this.size_bytes;
            }
            if (this.created_at != null) {
                data.created_at = this.created_at.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.name.length)
                writer.writeString(1, this.name);
            if (this.owner.length)
                writer.writeString(2, this.owner);
            if (this.type != Entry.Type.TYPE_UNSPECIFIED)
                writer.writeEnum(5, this.type);
            if (this.effective_permissions.length)
                writer.writeRepeatedMessage(6, this.effective_permissions, (item: Permissions) => item.serialize(writer));
            if (this.permissions.length)
                writer.writeRepeatedMessage(7, this.permissions, (item: Permissions) => item.serialize(writer));
            if (this.size_bytes != 0)
                writer.writeUint64(8, this.size_bytes);
            if (this.has_created_at)
                writer.writeMessage(9, this.created_at, () => this.created_at.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Entry {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Entry();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.name = reader.readString();
                        break;
                    case 2:
                        message.owner = reader.readString();
                        break;
                    case 5:
                        message.type = reader.readEnum();
                        break;
                    case 6:
                        reader.readMessage(message.effective_permissions, () => pb_1.Message.addToRepeatedWrapperField(message, 6, Permissions.deserialize(reader), Permissions));
                        break;
                    case 7:
                        reader.readMessage(message.permissions, () => pb_1.Message.addToRepeatedWrapperField(message, 7, Permissions.deserialize(reader), Permissions));
                        break;
                    case 8:
                        message.size_bytes = reader.readUint64();
                        break;
                    case 9:
                        reader.readMessage(message.created_at, () => message.created_at = dependency_1.Ydb.VirtualTimestamp.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Entry {
            return Entry.deserialize(bytes);
        }
    }
    export namespace Entry {
        export enum Type {
            TYPE_UNSPECIFIED = 0,
            DIRECTORY = 1,
            TABLE = 2,
            PERS_QUEUE_GROUP = 3,
            DATABASE = 4,
            RTMR_VOLUME = 5,
            BLOCK_STORE_VOLUME = 6,
            COORDINATION_NODE = 7,
            COLUMN_STORE = 12,
            COLUMN_TABLE = 13,
            SEQUENCE = 15,
            REPLICATION = 16,
            TOPIC = 17
        }
    }
    export class ListDirectoryResult extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            self?: Entry;
            children?: Entry[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("self" in data && data.self != undefined) {
                    this.self = data.self;
                }
                if ("children" in data && data.children != undefined) {
                    this.children = data.children;
                }
            }
        }
        get self() {
            return pb_1.Message.getWrapperField(this, Entry, 1) as Entry;
        }
        set self(value: Entry) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_self() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get children() {
            return pb_1.Message.getRepeatedWrapperField(this, Entry, 2) as Entry[];
        }
        set children(value: Entry[]) {
            pb_1.Message.setRepeatedWrapperField(this, 2, value);
        }
        static fromObject(data: {
            self?: ReturnType<typeof Entry.prototype.toObject>;
            children?: ReturnType<typeof Entry.prototype.toObject>[];
        }): ListDirectoryResult {
            const message = new ListDirectoryResult({});
            if (data.self != null) {
                message.self = Entry.fromObject(data.self);
            }
            if (data.children != null) {
                message.children = data.children.map(item => Entry.fromObject(item));
            }
            return message;
        }
        toObject() {
            const data: {
                self?: ReturnType<typeof Entry.prototype.toObject>;
                children?: ReturnType<typeof Entry.prototype.toObject>[];
            } = {};
            if (this.self != null) {
                data.self = this.self.toObject();
            }
            if (this.children != null) {
                data.children = this.children.map((item: Entry) => item.toObject());
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_self)
                writer.writeMessage(1, this.self, () => this.self.serialize(writer));
            if (this.children.length)
                writer.writeRepeatedMessage(2, this.children, (item: Entry) => item.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ListDirectoryResult {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ListDirectoryResult();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.self, () => message.self = Entry.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.children, () => pb_1.Message.addToRepeatedWrapperField(message, 2, Entry.deserialize(reader), Entry));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ListDirectoryResult {
            return ListDirectoryResult.deserialize(bytes);
        }
    }
    export class DescribePathRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation_params?: dependency_2.Ydb.Operations.OperationParams;
            path?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation_params" in data && data.operation_params != undefined) {
                    this.operation_params = data.operation_params;
                }
                if ("path" in data && data.path != undefined) {
                    this.path = data.path;
                }
            }
        }
        get operation_params() {
            return pb_1.Message.getWrapperField(this, dependency_2.Ydb.Operations.OperationParams, 1) as dependency_2.Ydb.Operations.OperationParams;
        }
        set operation_params(value: dependency_2.Ydb.Operations.OperationParams) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation_params() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get path() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set path(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            operation_params?: ReturnType<typeof dependency_2.Ydb.Operations.OperationParams.prototype.toObject>;
            path?: string;
        }): DescribePathRequest {
            const message = new DescribePathRequest({});
            if (data.operation_params != null) {
                message.operation_params = dependency_2.Ydb.Operations.OperationParams.fromObject(data.operation_params);
            }
            if (data.path != null) {
                message.path = data.path;
            }
            return message;
        }
        toObject() {
            const data: {
                operation_params?: ReturnType<typeof dependency_2.Ydb.Operations.OperationParams.prototype.toObject>;
                path?: string;
            } = {};
            if (this.operation_params != null) {
                data.operation_params = this.operation_params.toObject();
            }
            if (this.path != null) {
                data.path = this.path;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation_params)
                writer.writeMessage(1, this.operation_params, () => this.operation_params.serialize(writer));
            if (this.path.length)
                writer.writeString(2, this.path);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DescribePathRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DescribePathRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation_params, () => message.operation_params = dependency_2.Ydb.Operations.OperationParams.deserialize(reader));
                        break;
                    case 2:
                        message.path = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DescribePathRequest {
            return DescribePathRequest.deserialize(bytes);
        }
    }
    export class DescribePathResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation?: dependency_2.Ydb.Operations.Operation;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation" in data && data.operation != undefined) {
                    this.operation = data.operation;
                }
            }
        }
        get operation() {
            return pb_1.Message.getWrapperField(this, dependency_2.Ydb.Operations.Operation, 1) as dependency_2.Ydb.Operations.Operation;
        }
        set operation(value: dependency_2.Ydb.Operations.Operation) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data: {
            operation?: ReturnType<typeof dependency_2.Ydb.Operations.Operation.prototype.toObject>;
        }): DescribePathResponse {
            const message = new DescribePathResponse({});
            if (data.operation != null) {
                message.operation = dependency_2.Ydb.Operations.Operation.fromObject(data.operation);
            }
            return message;
        }
        toObject() {
            const data: {
                operation?: ReturnType<typeof dependency_2.Ydb.Operations.Operation.prototype.toObject>;
            } = {};
            if (this.operation != null) {
                data.operation = this.operation.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation)
                writer.writeMessage(1, this.operation, () => this.operation.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DescribePathResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DescribePathResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation, () => message.operation = dependency_2.Ydb.Operations.Operation.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DescribePathResponse {
            return DescribePathResponse.deserialize(bytes);
        }
    }
    export class DescribePathResult extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            self?: Entry;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("self" in data && data.self != undefined) {
                    this.self = data.self;
                }
            }
        }
        get self() {
            return pb_1.Message.getWrapperField(this, Entry, 1) as Entry;
        }
        set self(value: Entry) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_self() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data: {
            self?: ReturnType<typeof Entry.prototype.toObject>;
        }): DescribePathResult {
            const message = new DescribePathResult({});
            if (data.self != null) {
                message.self = Entry.fromObject(data.self);
            }
            return message;
        }
        toObject() {
            const data: {
                self?: ReturnType<typeof Entry.prototype.toObject>;
            } = {};
            if (this.self != null) {
                data.self = this.self.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_self)
                writer.writeMessage(1, this.self, () => this.self.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DescribePathResult {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DescribePathResult();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.self, () => message.self = Entry.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DescribePathResult {
            return DescribePathResult.deserialize(bytes);
        }
    }
    export class PermissionsAction extends pb_1.Message {
        #one_of_decls: number[][] = [[1, 2, 3, 4]];
        constructor(data?: any[] | ({} & (({
            grant?: Permissions;
            revoke?: never;
            set?: never;
            change_owner?: never;
        } | {
            grant?: never;
            revoke?: Permissions;
            set?: never;
            change_owner?: never;
        } | {
            grant?: never;
            revoke?: never;
            set?: Permissions;
            change_owner?: never;
        } | {
            grant?: never;
            revoke?: never;
            set?: never;
            change_owner?: string;
        })))) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("grant" in data && data.grant != undefined) {
                    this.grant = data.grant;
                }
                if ("revoke" in data && data.revoke != undefined) {
                    this.revoke = data.revoke;
                }
                if ("set" in data && data.set != undefined) {
                    this.set = data.set;
                }
                if ("change_owner" in data && data.change_owner != undefined) {
                    this.change_owner = data.change_owner;
                }
            }
        }
        get grant() {
            return pb_1.Message.getWrapperField(this, Permissions, 1) as Permissions;
        }
        set grant(value: Permissions) {
            pb_1.Message.setOneofWrapperField(this, 1, this.#one_of_decls[0], value);
        }
        get has_grant() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get revoke() {
            return pb_1.Message.getWrapperField(this, Permissions, 2) as Permissions;
        }
        set revoke(value: Permissions) {
            pb_1.Message.setOneofWrapperField(this, 2, this.#one_of_decls[0], value);
        }
        get has_revoke() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get set() {
            return pb_1.Message.getWrapperField(this, Permissions, 3) as Permissions;
        }
        set set(value: Permissions) {
            pb_1.Message.setOneofWrapperField(this, 3, this.#one_of_decls[0], value);
        }
        get has_set() {
            return pb_1.Message.getField(this, 3) != null;
        }
        get change_owner() {
            return pb_1.Message.getFieldWithDefault(this, 4, "") as string;
        }
        set change_owner(value: string) {
            pb_1.Message.setOneofField(this, 4, this.#one_of_decls[0], value);
        }
        get has_change_owner() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get action() {
            const cases: {
                [index: number]: "none" | "grant" | "revoke" | "set" | "change_owner";
            } = {
                0: "none",
                1: "grant",
                2: "revoke",
                3: "set",
                4: "change_owner"
            };
            return cases[pb_1.Message.computeOneofCase(this, [1, 2, 3, 4])];
        }
        static fromObject(data: {
            grant?: ReturnType<typeof Permissions.prototype.toObject>;
            revoke?: ReturnType<typeof Permissions.prototype.toObject>;
            set?: ReturnType<typeof Permissions.prototype.toObject>;
            change_owner?: string;
        }): PermissionsAction {
            const message = new PermissionsAction({});
            if (data.grant != null) {
                message.grant = Permissions.fromObject(data.grant);
            }
            if (data.revoke != null) {
                message.revoke = Permissions.fromObject(data.revoke);
            }
            if (data.set != null) {
                message.set = Permissions.fromObject(data.set);
            }
            if (data.change_owner != null) {
                message.change_owner = data.change_owner;
            }
            return message;
        }
        toObject() {
            const data: {
                grant?: ReturnType<typeof Permissions.prototype.toObject>;
                revoke?: ReturnType<typeof Permissions.prototype.toObject>;
                set?: ReturnType<typeof Permissions.prototype.toObject>;
                change_owner?: string;
            } = {};
            if (this.grant != null) {
                data.grant = this.grant.toObject();
            }
            if (this.revoke != null) {
                data.revoke = this.revoke.toObject();
            }
            if (this.set != null) {
                data.set = this.set.toObject();
            }
            if (this.change_owner != null) {
                data.change_owner = this.change_owner;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_grant)
                writer.writeMessage(1, this.grant, () => this.grant.serialize(writer));
            if (this.has_revoke)
                writer.writeMessage(2, this.revoke, () => this.revoke.serialize(writer));
            if (this.has_set)
                writer.writeMessage(3, this.set, () => this.set.serialize(writer));
            if (this.has_change_owner)
                writer.writeString(4, this.change_owner);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): PermissionsAction {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new PermissionsAction();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.grant, () => message.grant = Permissions.deserialize(reader));
                        break;
                    case 2:
                        reader.readMessage(message.revoke, () => message.revoke = Permissions.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.set, () => message.set = Permissions.deserialize(reader));
                        break;
                    case 4:
                        message.change_owner = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): PermissionsAction {
            return PermissionsAction.deserialize(bytes);
        }
    }
    export class ModifyPermissionsRequest extends pb_1.Message {
        #one_of_decls: number[][] = [[5]];
        constructor(data?: any[] | ({
            operation_params?: dependency_2.Ydb.Operations.OperationParams;
            path?: string;
            actions?: PermissionsAction[];
            clear_permissions?: boolean;
        } & (({
            interrupt_inheritance?: boolean;
        })))) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [3], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation_params" in data && data.operation_params != undefined) {
                    this.operation_params = data.operation_params;
                }
                if ("path" in data && data.path != undefined) {
                    this.path = data.path;
                }
                if ("actions" in data && data.actions != undefined) {
                    this.actions = data.actions;
                }
                if ("clear_permissions" in data && data.clear_permissions != undefined) {
                    this.clear_permissions = data.clear_permissions;
                }
                if ("interrupt_inheritance" in data && data.interrupt_inheritance != undefined) {
                    this.interrupt_inheritance = data.interrupt_inheritance;
                }
            }
        }
        get operation_params() {
            return pb_1.Message.getWrapperField(this, dependency_2.Ydb.Operations.OperationParams, 1) as dependency_2.Ydb.Operations.OperationParams;
        }
        set operation_params(value: dependency_2.Ydb.Operations.OperationParams) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation_params() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get path() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set path(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get actions() {
            return pb_1.Message.getRepeatedWrapperField(this, PermissionsAction, 3) as PermissionsAction[];
        }
        set actions(value: PermissionsAction[]) {
            pb_1.Message.setRepeatedWrapperField(this, 3, value);
        }
        get clear_permissions() {
            return pb_1.Message.getFieldWithDefault(this, 4, false) as boolean;
        }
        set clear_permissions(value: boolean) {
            pb_1.Message.setField(this, 4, value);
        }
        get interrupt_inheritance() {
            return pb_1.Message.getFieldWithDefault(this, 5, false) as boolean;
        }
        set interrupt_inheritance(value: boolean) {
            pb_1.Message.setOneofField(this, 5, this.#one_of_decls[0], value);
        }
        get has_interrupt_inheritance() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get inheritance() {
            const cases: {
                [index: number]: "none" | "interrupt_inheritance";
            } = {
                0: "none",
                5: "interrupt_inheritance"
            };
            return cases[pb_1.Message.computeOneofCase(this, [5])];
        }
        static fromObject(data: {
            operation_params?: ReturnType<typeof dependency_2.Ydb.Operations.OperationParams.prototype.toObject>;
            path?: string;
            actions?: ReturnType<typeof PermissionsAction.prototype.toObject>[];
            clear_permissions?: boolean;
            interrupt_inheritance?: boolean;
        }): ModifyPermissionsRequest {
            const message = new ModifyPermissionsRequest({});
            if (data.operation_params != null) {
                message.operation_params = dependency_2.Ydb.Operations.OperationParams.fromObject(data.operation_params);
            }
            if (data.path != null) {
                message.path = data.path;
            }
            if (data.actions != null) {
                message.actions = data.actions.map(item => PermissionsAction.fromObject(item));
            }
            if (data.clear_permissions != null) {
                message.clear_permissions = data.clear_permissions;
            }
            if (data.interrupt_inheritance != null) {
                message.interrupt_inheritance = data.interrupt_inheritance;
            }
            return message;
        }
        toObject() {
            const data: {
                operation_params?: ReturnType<typeof dependency_2.Ydb.Operations.OperationParams.prototype.toObject>;
                path?: string;
                actions?: ReturnType<typeof PermissionsAction.prototype.toObject>[];
                clear_permissions?: boolean;
                interrupt_inheritance?: boolean;
            } = {};
            if (this.operation_params != null) {
                data.operation_params = this.operation_params.toObject();
            }
            if (this.path != null) {
                data.path = this.path;
            }
            if (this.actions != null) {
                data.actions = this.actions.map((item: PermissionsAction) => item.toObject());
            }
            if (this.clear_permissions != null) {
                data.clear_permissions = this.clear_permissions;
            }
            if (this.interrupt_inheritance != null) {
                data.interrupt_inheritance = this.interrupt_inheritance;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation_params)
                writer.writeMessage(1, this.operation_params, () => this.operation_params.serialize(writer));
            if (this.path.length)
                writer.writeString(2, this.path);
            if (this.actions.length)
                writer.writeRepeatedMessage(3, this.actions, (item: PermissionsAction) => item.serialize(writer));
            if (this.clear_permissions != false)
                writer.writeBool(4, this.clear_permissions);
            if (this.has_interrupt_inheritance)
                writer.writeBool(5, this.interrupt_inheritance);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ModifyPermissionsRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ModifyPermissionsRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation_params, () => message.operation_params = dependency_2.Ydb.Operations.OperationParams.deserialize(reader));
                        break;
                    case 2:
                        message.path = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.actions, () => pb_1.Message.addToRepeatedWrapperField(message, 3, PermissionsAction.deserialize(reader), PermissionsAction));
                        break;
                    case 4:
                        message.clear_permissions = reader.readBool();
                        break;
                    case 5:
                        message.interrupt_inheritance = reader.readBool();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ModifyPermissionsRequest {
            return ModifyPermissionsRequest.deserialize(bytes);
        }
    }
    export class ModifyPermissionsResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation?: dependency_2.Ydb.Operations.Operation;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation" in data && data.operation != undefined) {
                    this.operation = data.operation;
                }
            }
        }
        get operation() {
            return pb_1.Message.getWrapperField(this, dependency_2.Ydb.Operations.Operation, 1) as dependency_2.Ydb.Operations.Operation;
        }
        set operation(value: dependency_2.Ydb.Operations.Operation) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data: {
            operation?: ReturnType<typeof dependency_2.Ydb.Operations.Operation.prototype.toObject>;
        }): ModifyPermissionsResponse {
            const message = new ModifyPermissionsResponse({});
            if (data.operation != null) {
                message.operation = dependency_2.Ydb.Operations.Operation.fromObject(data.operation);
            }
            return message;
        }
        toObject() {
            const data: {
                operation?: ReturnType<typeof dependency_2.Ydb.Operations.Operation.prototype.toObject>;
            } = {};
            if (this.operation != null) {
                data.operation = this.operation.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation)
                writer.writeMessage(1, this.operation, () => this.operation.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ModifyPermissionsResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ModifyPermissionsResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation, () => message.operation = dependency_2.Ydb.Operations.Operation.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ModifyPermissionsResponse {
            return ModifyPermissionsResponse.deserialize(bytes);
        }
    }
}
