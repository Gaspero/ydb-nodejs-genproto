/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 0.0.0
 * source: ydb_import_v1.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./protos/ydb_import";
import * as grpc_1 from "@grpc/grpc-js";
export namespace Ydb.Import.V1 {
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedImportServiceService {
        static definition = {
            ImportFromS3: {
                path: "/Ydb.Import.V1.ImportService/ImportFromS3",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.Ydb.Import.ImportFromS3Request) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.Ydb.Import.ImportFromS3Request.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.Ydb.Import.ImportFromS3Response) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.Ydb.Import.ImportFromS3Response.deserialize(new Uint8Array(bytes))
            },
            ImportData: {
                path: "/Ydb.Import.V1.ImportService/ImportData",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.Ydb.Import.ImportDataRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.Ydb.Import.ImportDataRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.Ydb.Import.ImportDataResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.Ydb.Import.ImportDataResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract ImportFromS3(call: grpc_1.ServerUnaryCall<dependency_1.Ydb.Import.ImportFromS3Request, dependency_1.Ydb.Import.ImportFromS3Response>, callback: grpc_1.sendUnaryData<dependency_1.Ydb.Import.ImportFromS3Response>): void;
        abstract ImportData(call: grpc_1.ServerUnaryCall<dependency_1.Ydb.Import.ImportDataRequest, dependency_1.Ydb.Import.ImportDataResponse>, callback: grpc_1.sendUnaryData<dependency_1.Ydb.Import.ImportDataResponse>): void;
    }
    export class ImportServiceClient extends grpc_1.makeGenericClientConstructor(UnimplementedImportServiceService.definition, "ImportService", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        ImportFromS3: GrpcUnaryServiceInterface<dependency_1.Ydb.Import.ImportFromS3Request, dependency_1.Ydb.Import.ImportFromS3Response> = (message: dependency_1.Ydb.Import.ImportFromS3Request, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Import.ImportFromS3Response>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Import.ImportFromS3Response>, callback?: grpc_1.requestCallback<dependency_1.Ydb.Import.ImportFromS3Response>): grpc_1.ClientUnaryCall => {
            return super.ImportFromS3(message, metadata, options, callback);
        };
        ImportData: GrpcUnaryServiceInterface<dependency_1.Ydb.Import.ImportDataRequest, dependency_1.Ydb.Import.ImportDataResponse> = (message: dependency_1.Ydb.Import.ImportDataRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Import.ImportDataResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Import.ImportDataResponse>, callback?: grpc_1.requestCallback<dependency_1.Ydb.Import.ImportDataResponse>): grpc_1.ClientUnaryCall => {
            return super.ImportData(message, metadata, options, callback);
        };
    }
}
