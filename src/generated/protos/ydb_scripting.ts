/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 0.0.0
 * source: protos/ydb_scripting.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./ydb_operation";
import * as dependency_2 from "./ydb_value";
import * as dependency_3 from "./ydb_table";
import * as dependency_4 from "./ydb_query_stats";
import * as dependency_5 from "./ydb_issue_message";
import * as dependency_6 from "./ydb_status_codes";
import * as pb_1 from "google-protobuf";
export namespace Ydb.Scripting {
    export class ExecuteYqlRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation_params?: dependency_1.Ydb.Operations.OperationParams;
            script?: string;
            parameters?: Map<string, dependency_2.Ydb.TypedValue>;
            collect_stats?: dependency_3.Ydb.Table.QueryStatsCollection.Mode;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation_params" in data && data.operation_params != undefined) {
                    this.operation_params = data.operation_params;
                }
                if ("script" in data && data.script != undefined) {
                    this.script = data.script;
                }
                if ("parameters" in data && data.parameters != undefined) {
                    this.parameters = data.parameters;
                }
                if ("collect_stats" in data && data.collect_stats != undefined) {
                    this.collect_stats = data.collect_stats;
                }
            }
            if (!this.parameters)
                this.parameters = new Map();
        }
        get operation_params() {
            return pb_1.Message.getWrapperField(this, dependency_1.Ydb.Operations.OperationParams, 1) as dependency_1.Ydb.Operations.OperationParams;
        }
        set operation_params(value: dependency_1.Ydb.Operations.OperationParams) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation_params() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get script() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set script(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get parameters() {
            return pb_1.Message.getField(this, 3) as any as Map<string, dependency_2.Ydb.TypedValue>;
        }
        set parameters(value: Map<string, dependency_2.Ydb.TypedValue>) {
            pb_1.Message.setField(this, 3, value as any);
        }
        get collect_stats() {
            return pb_1.Message.getFieldWithDefault(this, 4, dependency_3.Ydb.Table.QueryStatsCollection.Mode.STATS_COLLECTION_UNSPECIFIED) as dependency_3.Ydb.Table.QueryStatsCollection.Mode;
        }
        set collect_stats(value: dependency_3.Ydb.Table.QueryStatsCollection.Mode) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            operation_params?: ReturnType<typeof dependency_1.Ydb.Operations.OperationParams.prototype.toObject>;
            script?: string;
            parameters?: {
                [key: string]: ReturnType<typeof dependency_2.Ydb.TypedValue.prototype.toObject>;
            };
            collect_stats?: dependency_3.Ydb.Table.QueryStatsCollection.Mode;
        }): ExecuteYqlRequest {
            const message = new ExecuteYqlRequest({});
            if (data.operation_params != null) {
                message.operation_params = dependency_1.Ydb.Operations.OperationParams.fromObject(data.operation_params);
            }
            if (data.script != null) {
                message.script = data.script;
            }
            if (typeof data.parameters == "object") {
                message.parameters = new Map(Object.entries(data.parameters).map(([key, value]) => [key, dependency_2.Ydb.TypedValue.fromObject(value)]));
            }
            if (data.collect_stats != null) {
                message.collect_stats = data.collect_stats;
            }
            return message;
        }
        toObject() {
            const data: {
                operation_params?: ReturnType<typeof dependency_1.Ydb.Operations.OperationParams.prototype.toObject>;
                script?: string;
                parameters?: {
                    [key: string]: ReturnType<typeof dependency_2.Ydb.TypedValue.prototype.toObject>;
                };
                collect_stats?: dependency_3.Ydb.Table.QueryStatsCollection.Mode;
            } = {};
            if (this.operation_params != null) {
                data.operation_params = this.operation_params.toObject();
            }
            if (this.script != null) {
                data.script = this.script;
            }
            if (this.parameters != null) {
                data.parameters = (Object.fromEntries)((Array.from)(this.parameters).map(([key, value]) => [key, value.toObject()]));
            }
            if (this.collect_stats != null) {
                data.collect_stats = this.collect_stats;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation_params)
                writer.writeMessage(1, this.operation_params, () => this.operation_params.serialize(writer));
            if (this.script.length)
                writer.writeString(2, this.script);
            for (const [key, value] of this.parameters) {
                writer.writeMessage(3, this.parameters, () => {
                    writer.writeString(1, key);
                    writer.writeMessage(2, value, () => value.serialize(writer));
                });
            }
            if (this.collect_stats != dependency_3.Ydb.Table.QueryStatsCollection.Mode.STATS_COLLECTION_UNSPECIFIED)
                writer.writeEnum(4, this.collect_stats);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ExecuteYqlRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ExecuteYqlRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation_params, () => message.operation_params = dependency_1.Ydb.Operations.OperationParams.deserialize(reader));
                        break;
                    case 2:
                        message.script = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.parameters as any, reader, reader.readString, () => {
                            let value;
                            reader.readMessage(message, () => value = dependency_2.Ydb.TypedValue.deserialize(reader));
                            return value;
                        }));
                        break;
                    case 4:
                        message.collect_stats = reader.readEnum();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ExecuteYqlRequest {
            return ExecuteYqlRequest.deserialize(bytes);
        }
    }
    export class ExecuteYqlResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation?: dependency_1.Ydb.Operations.Operation;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation" in data && data.operation != undefined) {
                    this.operation = data.operation;
                }
            }
        }
        get operation() {
            return pb_1.Message.getWrapperField(this, dependency_1.Ydb.Operations.Operation, 1) as dependency_1.Ydb.Operations.Operation;
        }
        set operation(value: dependency_1.Ydb.Operations.Operation) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data: {
            operation?: ReturnType<typeof dependency_1.Ydb.Operations.Operation.prototype.toObject>;
        }): ExecuteYqlResponse {
            const message = new ExecuteYqlResponse({});
            if (data.operation != null) {
                message.operation = dependency_1.Ydb.Operations.Operation.fromObject(data.operation);
            }
            return message;
        }
        toObject() {
            const data: {
                operation?: ReturnType<typeof dependency_1.Ydb.Operations.Operation.prototype.toObject>;
            } = {};
            if (this.operation != null) {
                data.operation = this.operation.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation)
                writer.writeMessage(1, this.operation, () => this.operation.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ExecuteYqlResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ExecuteYqlResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation, () => message.operation = dependency_1.Ydb.Operations.Operation.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ExecuteYqlResponse {
            return ExecuteYqlResponse.deserialize(bytes);
        }
    }
    export class ExecuteYqlResult extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            result_sets?: dependency_2.Ydb.ResultSet[];
            query_stats?: dependency_4.Ydb.TableStats.QueryStats;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("result_sets" in data && data.result_sets != undefined) {
                    this.result_sets = data.result_sets;
                }
                if ("query_stats" in data && data.query_stats != undefined) {
                    this.query_stats = data.query_stats;
                }
            }
        }
        get result_sets() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_2.Ydb.ResultSet, 1) as dependency_2.Ydb.ResultSet[];
        }
        set result_sets(value: dependency_2.Ydb.ResultSet[]) {
            pb_1.Message.setRepeatedWrapperField(this, 1, value);
        }
        get query_stats() {
            return pb_1.Message.getWrapperField(this, dependency_4.Ydb.TableStats.QueryStats, 2) as dependency_4.Ydb.TableStats.QueryStats;
        }
        set query_stats(value: dependency_4.Ydb.TableStats.QueryStats) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_query_stats() {
            return pb_1.Message.getField(this, 2) != null;
        }
        static fromObject(data: {
            result_sets?: ReturnType<typeof dependency_2.Ydb.ResultSet.prototype.toObject>[];
            query_stats?: ReturnType<typeof dependency_4.Ydb.TableStats.QueryStats.prototype.toObject>;
        }): ExecuteYqlResult {
            const message = new ExecuteYqlResult({});
            if (data.result_sets != null) {
                message.result_sets = data.result_sets.map(item => dependency_2.Ydb.ResultSet.fromObject(item));
            }
            if (data.query_stats != null) {
                message.query_stats = dependency_4.Ydb.TableStats.QueryStats.fromObject(data.query_stats);
            }
            return message;
        }
        toObject() {
            const data: {
                result_sets?: ReturnType<typeof dependency_2.Ydb.ResultSet.prototype.toObject>[];
                query_stats?: ReturnType<typeof dependency_4.Ydb.TableStats.QueryStats.prototype.toObject>;
            } = {};
            if (this.result_sets != null) {
                data.result_sets = this.result_sets.map((item: dependency_2.Ydb.ResultSet) => item.toObject());
            }
            if (this.query_stats != null) {
                data.query_stats = this.query_stats.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.result_sets.length)
                writer.writeRepeatedMessage(1, this.result_sets, (item: dependency_2.Ydb.ResultSet) => item.serialize(writer));
            if (this.has_query_stats)
                writer.writeMessage(2, this.query_stats, () => this.query_stats.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ExecuteYqlResult {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ExecuteYqlResult();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.result_sets, () => pb_1.Message.addToRepeatedWrapperField(message, 1, dependency_2.Ydb.ResultSet.deserialize(reader), dependency_2.Ydb.ResultSet));
                        break;
                    case 2:
                        reader.readMessage(message.query_stats, () => message.query_stats = dependency_4.Ydb.TableStats.QueryStats.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ExecuteYqlResult {
            return ExecuteYqlResult.deserialize(bytes);
        }
    }
    export class ExecuteYqlPartialResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            status?: dependency_6.Ydb.StatusIds.StatusCode;
            issues?: dependency_5.Ydb.Issue.IssueMessage[];
            result?: ExecuteYqlPartialResult;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [2], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("status" in data && data.status != undefined) {
                    this.status = data.status;
                }
                if ("issues" in data && data.issues != undefined) {
                    this.issues = data.issues;
                }
                if ("result" in data && data.result != undefined) {
                    this.result = data.result;
                }
            }
        }
        get status() {
            return pb_1.Message.getFieldWithDefault(this, 1, dependency_6.Ydb.StatusIds.StatusCode.STATUS_CODE_UNSPECIFIED) as dependency_6.Ydb.StatusIds.StatusCode;
        }
        set status(value: dependency_6.Ydb.StatusIds.StatusCode) {
            pb_1.Message.setField(this, 1, value);
        }
        get issues() {
            return pb_1.Message.getRepeatedWrapperField(this, dependency_5.Ydb.Issue.IssueMessage, 2) as dependency_5.Ydb.Issue.IssueMessage[];
        }
        set issues(value: dependency_5.Ydb.Issue.IssueMessage[]) {
            pb_1.Message.setRepeatedWrapperField(this, 2, value);
        }
        get result() {
            return pb_1.Message.getWrapperField(this, ExecuteYqlPartialResult, 3) as ExecuteYqlPartialResult;
        }
        set result(value: ExecuteYqlPartialResult) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_result() {
            return pb_1.Message.getField(this, 3) != null;
        }
        static fromObject(data: {
            status?: dependency_6.Ydb.StatusIds.StatusCode;
            issues?: ReturnType<typeof dependency_5.Ydb.Issue.IssueMessage.prototype.toObject>[];
            result?: ReturnType<typeof ExecuteYqlPartialResult.prototype.toObject>;
        }): ExecuteYqlPartialResponse {
            const message = new ExecuteYqlPartialResponse({});
            if (data.status != null) {
                message.status = data.status;
            }
            if (data.issues != null) {
                message.issues = data.issues.map(item => dependency_5.Ydb.Issue.IssueMessage.fromObject(item));
            }
            if (data.result != null) {
                message.result = ExecuteYqlPartialResult.fromObject(data.result);
            }
            return message;
        }
        toObject() {
            const data: {
                status?: dependency_6.Ydb.StatusIds.StatusCode;
                issues?: ReturnType<typeof dependency_5.Ydb.Issue.IssueMessage.prototype.toObject>[];
                result?: ReturnType<typeof ExecuteYqlPartialResult.prototype.toObject>;
            } = {};
            if (this.status != null) {
                data.status = this.status;
            }
            if (this.issues != null) {
                data.issues = this.issues.map((item: dependency_5.Ydb.Issue.IssueMessage) => item.toObject());
            }
            if (this.result != null) {
                data.result = this.result.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.status != dependency_6.Ydb.StatusIds.StatusCode.STATUS_CODE_UNSPECIFIED)
                writer.writeEnum(1, this.status);
            if (this.issues.length)
                writer.writeRepeatedMessage(2, this.issues, (item: dependency_5.Ydb.Issue.IssueMessage) => item.serialize(writer));
            if (this.has_result)
                writer.writeMessage(3, this.result, () => this.result.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ExecuteYqlPartialResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ExecuteYqlPartialResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.status = reader.readEnum();
                        break;
                    case 2:
                        reader.readMessage(message.issues, () => pb_1.Message.addToRepeatedWrapperField(message, 2, dependency_5.Ydb.Issue.IssueMessage.deserialize(reader), dependency_5.Ydb.Issue.IssueMessage));
                        break;
                    case 3:
                        reader.readMessage(message.result, () => message.result = ExecuteYqlPartialResult.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ExecuteYqlPartialResponse {
            return ExecuteYqlPartialResponse.deserialize(bytes);
        }
    }
    export class ExecuteYqlPartialResult extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            result_set_index?: number;
            result_set?: dependency_2.Ydb.ResultSet;
            query_stats?: dependency_4.Ydb.TableStats.QueryStats;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("result_set_index" in data && data.result_set_index != undefined) {
                    this.result_set_index = data.result_set_index;
                }
                if ("result_set" in data && data.result_set != undefined) {
                    this.result_set = data.result_set;
                }
                if ("query_stats" in data && data.query_stats != undefined) {
                    this.query_stats = data.query_stats;
                }
            }
        }
        get result_set_index() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set result_set_index(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get result_set() {
            return pb_1.Message.getWrapperField(this, dependency_2.Ydb.ResultSet, 2) as dependency_2.Ydb.ResultSet;
        }
        set result_set(value: dependency_2.Ydb.ResultSet) {
            pb_1.Message.setWrapperField(this, 2, value);
        }
        get has_result_set() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get query_stats() {
            return pb_1.Message.getWrapperField(this, dependency_4.Ydb.TableStats.QueryStats, 3) as dependency_4.Ydb.TableStats.QueryStats;
        }
        set query_stats(value: dependency_4.Ydb.TableStats.QueryStats) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_query_stats() {
            return pb_1.Message.getField(this, 3) != null;
        }
        static fromObject(data: {
            result_set_index?: number;
            result_set?: ReturnType<typeof dependency_2.Ydb.ResultSet.prototype.toObject>;
            query_stats?: ReturnType<typeof dependency_4.Ydb.TableStats.QueryStats.prototype.toObject>;
        }): ExecuteYqlPartialResult {
            const message = new ExecuteYqlPartialResult({});
            if (data.result_set_index != null) {
                message.result_set_index = data.result_set_index;
            }
            if (data.result_set != null) {
                message.result_set = dependency_2.Ydb.ResultSet.fromObject(data.result_set);
            }
            if (data.query_stats != null) {
                message.query_stats = dependency_4.Ydb.TableStats.QueryStats.fromObject(data.query_stats);
            }
            return message;
        }
        toObject() {
            const data: {
                result_set_index?: number;
                result_set?: ReturnType<typeof dependency_2.Ydb.ResultSet.prototype.toObject>;
                query_stats?: ReturnType<typeof dependency_4.Ydb.TableStats.QueryStats.prototype.toObject>;
            } = {};
            if (this.result_set_index != null) {
                data.result_set_index = this.result_set_index;
            }
            if (this.result_set != null) {
                data.result_set = this.result_set.toObject();
            }
            if (this.query_stats != null) {
                data.query_stats = this.query_stats.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.result_set_index != 0)
                writer.writeUint32(1, this.result_set_index);
            if (this.has_result_set)
                writer.writeMessage(2, this.result_set, () => this.result_set.serialize(writer));
            if (this.has_query_stats)
                writer.writeMessage(3, this.query_stats, () => this.query_stats.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ExecuteYqlPartialResult {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ExecuteYqlPartialResult();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.result_set_index = reader.readUint32();
                        break;
                    case 2:
                        reader.readMessage(message.result_set, () => message.result_set = dependency_2.Ydb.ResultSet.deserialize(reader));
                        break;
                    case 3:
                        reader.readMessage(message.query_stats, () => message.query_stats = dependency_4.Ydb.TableStats.QueryStats.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ExecuteYqlPartialResult {
            return ExecuteYqlPartialResult.deserialize(bytes);
        }
    }
    export class ExplainYqlRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation_params?: dependency_1.Ydb.Operations.OperationParams;
            script?: string;
            mode?: ExplainYqlRequest.Mode;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation_params" in data && data.operation_params != undefined) {
                    this.operation_params = data.operation_params;
                }
                if ("script" in data && data.script != undefined) {
                    this.script = data.script;
                }
                if ("mode" in data && data.mode != undefined) {
                    this.mode = data.mode;
                }
            }
        }
        get operation_params() {
            return pb_1.Message.getWrapperField(this, dependency_1.Ydb.Operations.OperationParams, 1) as dependency_1.Ydb.Operations.OperationParams;
        }
        set operation_params(value: dependency_1.Ydb.Operations.OperationParams) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation_params() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get script() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set script(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get mode() {
            return pb_1.Message.getFieldWithDefault(this, 3, ExplainYqlRequest.Mode.MODE_UNSPECIFIED) as ExplainYqlRequest.Mode;
        }
        set mode(value: ExplainYqlRequest.Mode) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data: {
            operation_params?: ReturnType<typeof dependency_1.Ydb.Operations.OperationParams.prototype.toObject>;
            script?: string;
            mode?: ExplainYqlRequest.Mode;
        }): ExplainYqlRequest {
            const message = new ExplainYqlRequest({});
            if (data.operation_params != null) {
                message.operation_params = dependency_1.Ydb.Operations.OperationParams.fromObject(data.operation_params);
            }
            if (data.script != null) {
                message.script = data.script;
            }
            if (data.mode != null) {
                message.mode = data.mode;
            }
            return message;
        }
        toObject() {
            const data: {
                operation_params?: ReturnType<typeof dependency_1.Ydb.Operations.OperationParams.prototype.toObject>;
                script?: string;
                mode?: ExplainYqlRequest.Mode;
            } = {};
            if (this.operation_params != null) {
                data.operation_params = this.operation_params.toObject();
            }
            if (this.script != null) {
                data.script = this.script;
            }
            if (this.mode != null) {
                data.mode = this.mode;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation_params)
                writer.writeMessage(1, this.operation_params, () => this.operation_params.serialize(writer));
            if (this.script.length)
                writer.writeString(2, this.script);
            if (this.mode != ExplainYqlRequest.Mode.MODE_UNSPECIFIED)
                writer.writeEnum(3, this.mode);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ExplainYqlRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ExplainYqlRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation_params, () => message.operation_params = dependency_1.Ydb.Operations.OperationParams.deserialize(reader));
                        break;
                    case 2:
                        message.script = reader.readString();
                        break;
                    case 3:
                        message.mode = reader.readEnum();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ExplainYqlRequest {
            return ExplainYqlRequest.deserialize(bytes);
        }
    }
    export namespace ExplainYqlRequest {
        export enum Mode {
            MODE_UNSPECIFIED = 0,
            VALIDATE = 2,
            PLAN = 3
        }
    }
    export class ExplainYqlResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation?: dependency_1.Ydb.Operations.Operation;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation" in data && data.operation != undefined) {
                    this.operation = data.operation;
                }
            }
        }
        get operation() {
            return pb_1.Message.getWrapperField(this, dependency_1.Ydb.Operations.Operation, 1) as dependency_1.Ydb.Operations.Operation;
        }
        set operation(value: dependency_1.Ydb.Operations.Operation) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data: {
            operation?: ReturnType<typeof dependency_1.Ydb.Operations.Operation.prototype.toObject>;
        }): ExplainYqlResponse {
            const message = new ExplainYqlResponse({});
            if (data.operation != null) {
                message.operation = dependency_1.Ydb.Operations.Operation.fromObject(data.operation);
            }
            return message;
        }
        toObject() {
            const data: {
                operation?: ReturnType<typeof dependency_1.Ydb.Operations.Operation.prototype.toObject>;
            } = {};
            if (this.operation != null) {
                data.operation = this.operation.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation)
                writer.writeMessage(1, this.operation, () => this.operation.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ExplainYqlResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ExplainYqlResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation, () => message.operation = dependency_1.Ydb.Operations.Operation.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ExplainYqlResponse {
            return ExplainYqlResponse.deserialize(bytes);
        }
    }
    export class ExplainYqlResult extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            parameters_types?: Map<string, dependency_2.Ydb.Type>;
            plan?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("parameters_types" in data && data.parameters_types != undefined) {
                    this.parameters_types = data.parameters_types;
                }
                if ("plan" in data && data.plan != undefined) {
                    this.plan = data.plan;
                }
            }
            if (!this.parameters_types)
                this.parameters_types = new Map();
        }
        get parameters_types() {
            return pb_1.Message.getField(this, 1) as any as Map<string, dependency_2.Ydb.Type>;
        }
        set parameters_types(value: Map<string, dependency_2.Ydb.Type>) {
            pb_1.Message.setField(this, 1, value as any);
        }
        get plan() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set plan(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        static fromObject(data: {
            parameters_types?: {
                [key: string]: ReturnType<typeof dependency_2.Ydb.Type.prototype.toObject>;
            };
            plan?: string;
        }): ExplainYqlResult {
            const message = new ExplainYqlResult({});
            if (typeof data.parameters_types == "object") {
                message.parameters_types = new Map(Object.entries(data.parameters_types).map(([key, value]) => [key, dependency_2.Ydb.Type.fromObject(value)]));
            }
            if (data.plan != null) {
                message.plan = data.plan;
            }
            return message;
        }
        toObject() {
            const data: {
                parameters_types?: {
                    [key: string]: ReturnType<typeof dependency_2.Ydb.Type.prototype.toObject>;
                };
                plan?: string;
            } = {};
            if (this.parameters_types != null) {
                data.parameters_types = (Object.fromEntries)((Array.from)(this.parameters_types).map(([key, value]) => [key, value.toObject()]));
            }
            if (this.plan != null) {
                data.plan = this.plan;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            for (const [key, value] of this.parameters_types) {
                writer.writeMessage(1, this.parameters_types, () => {
                    writer.writeString(1, key);
                    writer.writeMessage(2, value, () => value.serialize(writer));
                });
            }
            if (this.plan.length)
                writer.writeString(2, this.plan);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ExplainYqlResult {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ExplainYqlResult();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message, () => pb_1.Map.deserializeBinary(message.parameters_types as any, reader, reader.readString, () => {
                            let value;
                            reader.readMessage(message, () => value = dependency_2.Ydb.Type.deserialize(reader));
                            return value;
                        }));
                        break;
                    case 2:
                        message.plan = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ExplainYqlResult {
            return ExplainYqlResult.deserialize(bytes);
        }
    }
}
