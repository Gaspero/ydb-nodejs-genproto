/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 0.0.0
 * source: ydb_topic_v1.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./protos/ydb_topic";
import * as grpc_1 from "@grpc/grpc-js";
export namespace Ydb.Topic.V1 {
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedTopicServiceService {
        static definition = {
            StreamWrite: {
                path: "/Ydb.Topic.V1.TopicService/StreamWrite",
                requestStream: true,
                responseStream: true,
                requestSerialize: (message: dependency_1.Ydb.Topic.StreamWriteMessage.FromClient) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.Ydb.Topic.StreamWriteMessage.FromClient.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.Ydb.Topic.StreamWriteMessage.FromServer) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.Ydb.Topic.StreamWriteMessage.FromServer.deserialize(new Uint8Array(bytes))
            },
            StreamRead: {
                path: "/Ydb.Topic.V1.TopicService/StreamRead",
                requestStream: true,
                responseStream: true,
                requestSerialize: (message: dependency_1.Ydb.Topic.StreamReadMessage.FromClient) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.Ydb.Topic.StreamReadMessage.FromClient.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.Ydb.Topic.StreamReadMessage.FromServer) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.Ydb.Topic.StreamReadMessage.FromServer.deserialize(new Uint8Array(bytes))
            },
            CreateTopic: {
                path: "/Ydb.Topic.V1.TopicService/CreateTopic",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.Ydb.Topic.CreateTopicRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.Ydb.Topic.CreateTopicRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.Ydb.Topic.CreateTopicResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.Ydb.Topic.CreateTopicResponse.deserialize(new Uint8Array(bytes))
            },
            DescribeTopic: {
                path: "/Ydb.Topic.V1.TopicService/DescribeTopic",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.Ydb.Topic.DescribeTopicRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.Ydb.Topic.DescribeTopicRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.Ydb.Topic.DescribeTopicResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.Ydb.Topic.DescribeTopicResponse.deserialize(new Uint8Array(bytes))
            },
            DescribeConsumer: {
                path: "/Ydb.Topic.V1.TopicService/DescribeConsumer",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.Ydb.Topic.DescribeConsumerRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.Ydb.Topic.DescribeConsumerRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.Ydb.Topic.DescribeConsumerResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.Ydb.Topic.DescribeConsumerResponse.deserialize(new Uint8Array(bytes))
            },
            AlterTopic: {
                path: "/Ydb.Topic.V1.TopicService/AlterTopic",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.Ydb.Topic.AlterTopicRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.Ydb.Topic.AlterTopicRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.Ydb.Topic.AlterTopicResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.Ydb.Topic.AlterTopicResponse.deserialize(new Uint8Array(bytes))
            },
            DropTopic: {
                path: "/Ydb.Topic.V1.TopicService/DropTopic",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.Ydb.Topic.DropTopicRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.Ydb.Topic.DropTopicRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.Ydb.Topic.DropTopicResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.Ydb.Topic.DropTopicResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract StreamWrite(call: grpc_1.ServerDuplexStream<dependency_1.Ydb.Topic.StreamWriteMessage.FromClient, dependency_1.Ydb.Topic.StreamWriteMessage.FromServer>): void;
        abstract StreamRead(call: grpc_1.ServerDuplexStream<dependency_1.Ydb.Topic.StreamReadMessage.FromClient, dependency_1.Ydb.Topic.StreamReadMessage.FromServer>): void;
        abstract CreateTopic(call: grpc_1.ServerUnaryCall<dependency_1.Ydb.Topic.CreateTopicRequest, dependency_1.Ydb.Topic.CreateTopicResponse>, callback: grpc_1.sendUnaryData<dependency_1.Ydb.Topic.CreateTopicResponse>): void;
        abstract DescribeTopic(call: grpc_1.ServerUnaryCall<dependency_1.Ydb.Topic.DescribeTopicRequest, dependency_1.Ydb.Topic.DescribeTopicResponse>, callback: grpc_1.sendUnaryData<dependency_1.Ydb.Topic.DescribeTopicResponse>): void;
        abstract DescribeConsumer(call: grpc_1.ServerUnaryCall<dependency_1.Ydb.Topic.DescribeConsumerRequest, dependency_1.Ydb.Topic.DescribeConsumerResponse>, callback: grpc_1.sendUnaryData<dependency_1.Ydb.Topic.DescribeConsumerResponse>): void;
        abstract AlterTopic(call: grpc_1.ServerUnaryCall<dependency_1.Ydb.Topic.AlterTopicRequest, dependency_1.Ydb.Topic.AlterTopicResponse>, callback: grpc_1.sendUnaryData<dependency_1.Ydb.Topic.AlterTopicResponse>): void;
        abstract DropTopic(call: grpc_1.ServerUnaryCall<dependency_1.Ydb.Topic.DropTopicRequest, dependency_1.Ydb.Topic.DropTopicResponse>, callback: grpc_1.sendUnaryData<dependency_1.Ydb.Topic.DropTopicResponse>): void;
    }
    export class TopicServiceClient extends grpc_1.makeGenericClientConstructor(UnimplementedTopicServiceService.definition, "TopicService", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        StreamWrite: GrpcChunkServiceInterface<dependency_1.Ydb.Topic.StreamWriteMessage.FromClient, dependency_1.Ydb.Topic.StreamWriteMessage.FromServer> = (metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<dependency_1.Ydb.Topic.StreamWriteMessage.FromClient, dependency_1.Ydb.Topic.StreamWriteMessage.FromServer> => {
            return super.StreamWrite(metadata, options);
        };
        StreamRead: GrpcChunkServiceInterface<dependency_1.Ydb.Topic.StreamReadMessage.FromClient, dependency_1.Ydb.Topic.StreamReadMessage.FromServer> = (metadata?: grpc_1.Metadata | grpc_1.CallOptions, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<dependency_1.Ydb.Topic.StreamReadMessage.FromClient, dependency_1.Ydb.Topic.StreamReadMessage.FromServer> => {
            return super.StreamRead(metadata, options);
        };
        CreateTopic: GrpcUnaryServiceInterface<dependency_1.Ydb.Topic.CreateTopicRequest, dependency_1.Ydb.Topic.CreateTopicResponse> = (message: dependency_1.Ydb.Topic.CreateTopicRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Topic.CreateTopicResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Topic.CreateTopicResponse>, callback?: grpc_1.requestCallback<dependency_1.Ydb.Topic.CreateTopicResponse>): grpc_1.ClientUnaryCall => {
            return super.CreateTopic(message, metadata, options, callback);
        };
        DescribeTopic: GrpcUnaryServiceInterface<dependency_1.Ydb.Topic.DescribeTopicRequest, dependency_1.Ydb.Topic.DescribeTopicResponse> = (message: dependency_1.Ydb.Topic.DescribeTopicRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Topic.DescribeTopicResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Topic.DescribeTopicResponse>, callback?: grpc_1.requestCallback<dependency_1.Ydb.Topic.DescribeTopicResponse>): grpc_1.ClientUnaryCall => {
            return super.DescribeTopic(message, metadata, options, callback);
        };
        DescribeConsumer: GrpcUnaryServiceInterface<dependency_1.Ydb.Topic.DescribeConsumerRequest, dependency_1.Ydb.Topic.DescribeConsumerResponse> = (message: dependency_1.Ydb.Topic.DescribeConsumerRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Topic.DescribeConsumerResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Topic.DescribeConsumerResponse>, callback?: grpc_1.requestCallback<dependency_1.Ydb.Topic.DescribeConsumerResponse>): grpc_1.ClientUnaryCall => {
            return super.DescribeConsumer(message, metadata, options, callback);
        };
        AlterTopic: GrpcUnaryServiceInterface<dependency_1.Ydb.Topic.AlterTopicRequest, dependency_1.Ydb.Topic.AlterTopicResponse> = (message: dependency_1.Ydb.Topic.AlterTopicRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Topic.AlterTopicResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Topic.AlterTopicResponse>, callback?: grpc_1.requestCallback<dependency_1.Ydb.Topic.AlterTopicResponse>): grpc_1.ClientUnaryCall => {
            return super.AlterTopic(message, metadata, options, callback);
        };
        DropTopic: GrpcUnaryServiceInterface<dependency_1.Ydb.Topic.DropTopicRequest, dependency_1.Ydb.Topic.DropTopicResponse> = (message: dependency_1.Ydb.Topic.DropTopicRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Topic.DropTopicResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Topic.DropTopicResponse>, callback?: grpc_1.requestCallback<dependency_1.Ydb.Topic.DropTopicResponse>): grpc_1.ClientUnaryCall => {
            return super.DropTopic(message, metadata, options, callback);
        };
    }
}
