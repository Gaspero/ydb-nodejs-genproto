/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 0.0.0
 * source: protos/ydb_rate_limiter.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./ydb_operation";
import * as pb_1 from "google-protobuf";
export namespace Ydb.RateLimiter {
    export class HierarchicalDrrSettings extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            max_units_per_second?: number;
            max_burst_size_coefficient?: number;
            prefetch_coefficient?: number;
            prefetch_watermark?: number;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("max_units_per_second" in data && data.max_units_per_second != undefined) {
                    this.max_units_per_second = data.max_units_per_second;
                }
                if ("max_burst_size_coefficient" in data && data.max_burst_size_coefficient != undefined) {
                    this.max_burst_size_coefficient = data.max_burst_size_coefficient;
                }
                if ("prefetch_coefficient" in data && data.prefetch_coefficient != undefined) {
                    this.prefetch_coefficient = data.prefetch_coefficient;
                }
                if ("prefetch_watermark" in data && data.prefetch_watermark != undefined) {
                    this.prefetch_watermark = data.prefetch_watermark;
                }
            }
        }
        get max_units_per_second() {
            return pb_1.Message.getFieldWithDefault(this, 1, 0) as number;
        }
        set max_units_per_second(value: number) {
            pb_1.Message.setField(this, 1, value);
        }
        get max_burst_size_coefficient() {
            return pb_1.Message.getFieldWithDefault(this, 2, 0) as number;
        }
        set max_burst_size_coefficient(value: number) {
            pb_1.Message.setField(this, 2, value);
        }
        get prefetch_coefficient() {
            return pb_1.Message.getFieldWithDefault(this, 3, 0) as number;
        }
        set prefetch_coefficient(value: number) {
            pb_1.Message.setField(this, 3, value);
        }
        get prefetch_watermark() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
        }
        set prefetch_watermark(value: number) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            max_units_per_second?: number;
            max_burst_size_coefficient?: number;
            prefetch_coefficient?: number;
            prefetch_watermark?: number;
        }): HierarchicalDrrSettings {
            const message = new HierarchicalDrrSettings({});
            if (data.max_units_per_second != null) {
                message.max_units_per_second = data.max_units_per_second;
            }
            if (data.max_burst_size_coefficient != null) {
                message.max_burst_size_coefficient = data.max_burst_size_coefficient;
            }
            if (data.prefetch_coefficient != null) {
                message.prefetch_coefficient = data.prefetch_coefficient;
            }
            if (data.prefetch_watermark != null) {
                message.prefetch_watermark = data.prefetch_watermark;
            }
            return message;
        }
        toObject() {
            const data: {
                max_units_per_second?: number;
                max_burst_size_coefficient?: number;
                prefetch_coefficient?: number;
                prefetch_watermark?: number;
            } = {};
            if (this.max_units_per_second != null) {
                data.max_units_per_second = this.max_units_per_second;
            }
            if (this.max_burst_size_coefficient != null) {
                data.max_burst_size_coefficient = this.max_burst_size_coefficient;
            }
            if (this.prefetch_coefficient != null) {
                data.prefetch_coefficient = this.prefetch_coefficient;
            }
            if (this.prefetch_watermark != null) {
                data.prefetch_watermark = this.prefetch_watermark;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.max_units_per_second != 0)
                writer.writeDouble(1, this.max_units_per_second);
            if (this.max_burst_size_coefficient != 0)
                writer.writeDouble(2, this.max_burst_size_coefficient);
            if (this.prefetch_coefficient != 0)
                writer.writeDouble(3, this.prefetch_coefficient);
            if (this.prefetch_watermark != 0)
                writer.writeDouble(4, this.prefetch_watermark);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): HierarchicalDrrSettings {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new HierarchicalDrrSettings();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.max_units_per_second = reader.readDouble();
                        break;
                    case 2:
                        message.max_burst_size_coefficient = reader.readDouble();
                        break;
                    case 3:
                        message.prefetch_coefficient = reader.readDouble();
                        break;
                    case 4:
                        message.prefetch_watermark = reader.readDouble();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): HierarchicalDrrSettings {
            return HierarchicalDrrSettings.deserialize(bytes);
        }
    }
    export class Resource extends pb_1.Message {
        #one_of_decls: number[][] = [[2]];
        constructor(data?: any[] | ({
            resource_path?: string;
        } & (({
            hierarchical_drr?: HierarchicalDrrSettings;
        })))) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("resource_path" in data && data.resource_path != undefined) {
                    this.resource_path = data.resource_path;
                }
                if ("hierarchical_drr" in data && data.hierarchical_drr != undefined) {
                    this.hierarchical_drr = data.hierarchical_drr;
                }
            }
        }
        get resource_path() {
            return pb_1.Message.getFieldWithDefault(this, 1, "") as string;
        }
        set resource_path(value: string) {
            pb_1.Message.setField(this, 1, value);
        }
        get hierarchical_drr() {
            return pb_1.Message.getWrapperField(this, HierarchicalDrrSettings, 2) as HierarchicalDrrSettings;
        }
        set hierarchical_drr(value: HierarchicalDrrSettings) {
            pb_1.Message.setOneofWrapperField(this, 2, this.#one_of_decls[0], value);
        }
        get has_hierarchical_drr() {
            return pb_1.Message.getField(this, 2) != null;
        }
        get type() {
            const cases: {
                [index: number]: "none" | "hierarchical_drr";
            } = {
                0: "none",
                2: "hierarchical_drr"
            };
            return cases[pb_1.Message.computeOneofCase(this, [2])];
        }
        static fromObject(data: {
            resource_path?: string;
            hierarchical_drr?: ReturnType<typeof HierarchicalDrrSettings.prototype.toObject>;
        }): Resource {
            const message = new Resource({});
            if (data.resource_path != null) {
                message.resource_path = data.resource_path;
            }
            if (data.hierarchical_drr != null) {
                message.hierarchical_drr = HierarchicalDrrSettings.fromObject(data.hierarchical_drr);
            }
            return message;
        }
        toObject() {
            const data: {
                resource_path?: string;
                hierarchical_drr?: ReturnType<typeof HierarchicalDrrSettings.prototype.toObject>;
            } = {};
            if (this.resource_path != null) {
                data.resource_path = this.resource_path;
            }
            if (this.hierarchical_drr != null) {
                data.hierarchical_drr = this.hierarchical_drr.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.resource_path.length)
                writer.writeString(1, this.resource_path);
            if (this.has_hierarchical_drr)
                writer.writeMessage(2, this.hierarchical_drr, () => this.hierarchical_drr.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): Resource {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new Resource();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        message.resource_path = reader.readString();
                        break;
                    case 2:
                        reader.readMessage(message.hierarchical_drr, () => message.hierarchical_drr = HierarchicalDrrSettings.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): Resource {
            return Resource.deserialize(bytes);
        }
    }
    export class CreateResourceRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation_params?: dependency_1.Ydb.Operations.OperationParams;
            coordination_node_path?: string;
            resource?: Resource;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation_params" in data && data.operation_params != undefined) {
                    this.operation_params = data.operation_params;
                }
                if ("coordination_node_path" in data && data.coordination_node_path != undefined) {
                    this.coordination_node_path = data.coordination_node_path;
                }
                if ("resource" in data && data.resource != undefined) {
                    this.resource = data.resource;
                }
            }
        }
        get operation_params() {
            return pb_1.Message.getWrapperField(this, dependency_1.Ydb.Operations.OperationParams, 1) as dependency_1.Ydb.Operations.OperationParams;
        }
        set operation_params(value: dependency_1.Ydb.Operations.OperationParams) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation_params() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get coordination_node_path() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set coordination_node_path(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get resource() {
            return pb_1.Message.getWrapperField(this, Resource, 3) as Resource;
        }
        set resource(value: Resource) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_resource() {
            return pb_1.Message.getField(this, 3) != null;
        }
        static fromObject(data: {
            operation_params?: ReturnType<typeof dependency_1.Ydb.Operations.OperationParams.prototype.toObject>;
            coordination_node_path?: string;
            resource?: ReturnType<typeof Resource.prototype.toObject>;
        }): CreateResourceRequest {
            const message = new CreateResourceRequest({});
            if (data.operation_params != null) {
                message.operation_params = dependency_1.Ydb.Operations.OperationParams.fromObject(data.operation_params);
            }
            if (data.coordination_node_path != null) {
                message.coordination_node_path = data.coordination_node_path;
            }
            if (data.resource != null) {
                message.resource = Resource.fromObject(data.resource);
            }
            return message;
        }
        toObject() {
            const data: {
                operation_params?: ReturnType<typeof dependency_1.Ydb.Operations.OperationParams.prototype.toObject>;
                coordination_node_path?: string;
                resource?: ReturnType<typeof Resource.prototype.toObject>;
            } = {};
            if (this.operation_params != null) {
                data.operation_params = this.operation_params.toObject();
            }
            if (this.coordination_node_path != null) {
                data.coordination_node_path = this.coordination_node_path;
            }
            if (this.resource != null) {
                data.resource = this.resource.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation_params)
                writer.writeMessage(1, this.operation_params, () => this.operation_params.serialize(writer));
            if (this.coordination_node_path.length)
                writer.writeString(2, this.coordination_node_path);
            if (this.has_resource)
                writer.writeMessage(3, this.resource, () => this.resource.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CreateResourceRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CreateResourceRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation_params, () => message.operation_params = dependency_1.Ydb.Operations.OperationParams.deserialize(reader));
                        break;
                    case 2:
                        message.coordination_node_path = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.resource, () => message.resource = Resource.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CreateResourceRequest {
            return CreateResourceRequest.deserialize(bytes);
        }
    }
    export class CreateResourceResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation?: dependency_1.Ydb.Operations.Operation;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation" in data && data.operation != undefined) {
                    this.operation = data.operation;
                }
            }
        }
        get operation() {
            return pb_1.Message.getWrapperField(this, dependency_1.Ydb.Operations.Operation, 1) as dependency_1.Ydb.Operations.Operation;
        }
        set operation(value: dependency_1.Ydb.Operations.Operation) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data: {
            operation?: ReturnType<typeof dependency_1.Ydb.Operations.Operation.prototype.toObject>;
        }): CreateResourceResponse {
            const message = new CreateResourceResponse({});
            if (data.operation != null) {
                message.operation = dependency_1.Ydb.Operations.Operation.fromObject(data.operation);
            }
            return message;
        }
        toObject() {
            const data: {
                operation?: ReturnType<typeof dependency_1.Ydb.Operations.Operation.prototype.toObject>;
            } = {};
            if (this.operation != null) {
                data.operation = this.operation.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation)
                writer.writeMessage(1, this.operation, () => this.operation.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CreateResourceResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CreateResourceResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation, () => message.operation = dependency_1.Ydb.Operations.Operation.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CreateResourceResponse {
            return CreateResourceResponse.deserialize(bytes);
        }
    }
    export class CreateResourceResult extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): CreateResourceResult {
            const message = new CreateResourceResult({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): CreateResourceResult {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new CreateResourceResult();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): CreateResourceResult {
            return CreateResourceResult.deserialize(bytes);
        }
    }
    export class AlterResourceRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation_params?: dependency_1.Ydb.Operations.OperationParams;
            coordination_node_path?: string;
            resource?: Resource;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation_params" in data && data.operation_params != undefined) {
                    this.operation_params = data.operation_params;
                }
                if ("coordination_node_path" in data && data.coordination_node_path != undefined) {
                    this.coordination_node_path = data.coordination_node_path;
                }
                if ("resource" in data && data.resource != undefined) {
                    this.resource = data.resource;
                }
            }
        }
        get operation_params() {
            return pb_1.Message.getWrapperField(this, dependency_1.Ydb.Operations.OperationParams, 1) as dependency_1.Ydb.Operations.OperationParams;
        }
        set operation_params(value: dependency_1.Ydb.Operations.OperationParams) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation_params() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get coordination_node_path() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set coordination_node_path(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get resource() {
            return pb_1.Message.getWrapperField(this, Resource, 3) as Resource;
        }
        set resource(value: Resource) {
            pb_1.Message.setWrapperField(this, 3, value);
        }
        get has_resource() {
            return pb_1.Message.getField(this, 3) != null;
        }
        static fromObject(data: {
            operation_params?: ReturnType<typeof dependency_1.Ydb.Operations.OperationParams.prototype.toObject>;
            coordination_node_path?: string;
            resource?: ReturnType<typeof Resource.prototype.toObject>;
        }): AlterResourceRequest {
            const message = new AlterResourceRequest({});
            if (data.operation_params != null) {
                message.operation_params = dependency_1.Ydb.Operations.OperationParams.fromObject(data.operation_params);
            }
            if (data.coordination_node_path != null) {
                message.coordination_node_path = data.coordination_node_path;
            }
            if (data.resource != null) {
                message.resource = Resource.fromObject(data.resource);
            }
            return message;
        }
        toObject() {
            const data: {
                operation_params?: ReturnType<typeof dependency_1.Ydb.Operations.OperationParams.prototype.toObject>;
                coordination_node_path?: string;
                resource?: ReturnType<typeof Resource.prototype.toObject>;
            } = {};
            if (this.operation_params != null) {
                data.operation_params = this.operation_params.toObject();
            }
            if (this.coordination_node_path != null) {
                data.coordination_node_path = this.coordination_node_path;
            }
            if (this.resource != null) {
                data.resource = this.resource.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation_params)
                writer.writeMessage(1, this.operation_params, () => this.operation_params.serialize(writer));
            if (this.coordination_node_path.length)
                writer.writeString(2, this.coordination_node_path);
            if (this.has_resource)
                writer.writeMessage(3, this.resource, () => this.resource.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AlterResourceRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AlterResourceRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation_params, () => message.operation_params = dependency_1.Ydb.Operations.OperationParams.deserialize(reader));
                        break;
                    case 2:
                        message.coordination_node_path = reader.readString();
                        break;
                    case 3:
                        reader.readMessage(message.resource, () => message.resource = Resource.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AlterResourceRequest {
            return AlterResourceRequest.deserialize(bytes);
        }
    }
    export class AlterResourceResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation?: dependency_1.Ydb.Operations.Operation;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation" in data && data.operation != undefined) {
                    this.operation = data.operation;
                }
            }
        }
        get operation() {
            return pb_1.Message.getWrapperField(this, dependency_1.Ydb.Operations.Operation, 1) as dependency_1.Ydb.Operations.Operation;
        }
        set operation(value: dependency_1.Ydb.Operations.Operation) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data: {
            operation?: ReturnType<typeof dependency_1.Ydb.Operations.Operation.prototype.toObject>;
        }): AlterResourceResponse {
            const message = new AlterResourceResponse({});
            if (data.operation != null) {
                message.operation = dependency_1.Ydb.Operations.Operation.fromObject(data.operation);
            }
            return message;
        }
        toObject() {
            const data: {
                operation?: ReturnType<typeof dependency_1.Ydb.Operations.Operation.prototype.toObject>;
            } = {};
            if (this.operation != null) {
                data.operation = this.operation.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation)
                writer.writeMessage(1, this.operation, () => this.operation.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AlterResourceResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AlterResourceResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation, () => message.operation = dependency_1.Ydb.Operations.Operation.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AlterResourceResponse {
            return AlterResourceResponse.deserialize(bytes);
        }
    }
    export class AlterResourceResult extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): AlterResourceResult {
            const message = new AlterResourceResult({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AlterResourceResult {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AlterResourceResult();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AlterResourceResult {
            return AlterResourceResult.deserialize(bytes);
        }
    }
    export class DropResourceRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation_params?: dependency_1.Ydb.Operations.OperationParams;
            coordination_node_path?: string;
            resource_path?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation_params" in data && data.operation_params != undefined) {
                    this.operation_params = data.operation_params;
                }
                if ("coordination_node_path" in data && data.coordination_node_path != undefined) {
                    this.coordination_node_path = data.coordination_node_path;
                }
                if ("resource_path" in data && data.resource_path != undefined) {
                    this.resource_path = data.resource_path;
                }
            }
        }
        get operation_params() {
            return pb_1.Message.getWrapperField(this, dependency_1.Ydb.Operations.OperationParams, 1) as dependency_1.Ydb.Operations.OperationParams;
        }
        set operation_params(value: dependency_1.Ydb.Operations.OperationParams) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation_params() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get coordination_node_path() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set coordination_node_path(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get resource_path() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set resource_path(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data: {
            operation_params?: ReturnType<typeof dependency_1.Ydb.Operations.OperationParams.prototype.toObject>;
            coordination_node_path?: string;
            resource_path?: string;
        }): DropResourceRequest {
            const message = new DropResourceRequest({});
            if (data.operation_params != null) {
                message.operation_params = dependency_1.Ydb.Operations.OperationParams.fromObject(data.operation_params);
            }
            if (data.coordination_node_path != null) {
                message.coordination_node_path = data.coordination_node_path;
            }
            if (data.resource_path != null) {
                message.resource_path = data.resource_path;
            }
            return message;
        }
        toObject() {
            const data: {
                operation_params?: ReturnType<typeof dependency_1.Ydb.Operations.OperationParams.prototype.toObject>;
                coordination_node_path?: string;
                resource_path?: string;
            } = {};
            if (this.operation_params != null) {
                data.operation_params = this.operation_params.toObject();
            }
            if (this.coordination_node_path != null) {
                data.coordination_node_path = this.coordination_node_path;
            }
            if (this.resource_path != null) {
                data.resource_path = this.resource_path;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation_params)
                writer.writeMessage(1, this.operation_params, () => this.operation_params.serialize(writer));
            if (this.coordination_node_path.length)
                writer.writeString(2, this.coordination_node_path);
            if (this.resource_path.length)
                writer.writeString(3, this.resource_path);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DropResourceRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DropResourceRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation_params, () => message.operation_params = dependency_1.Ydb.Operations.OperationParams.deserialize(reader));
                        break;
                    case 2:
                        message.coordination_node_path = reader.readString();
                        break;
                    case 3:
                        message.resource_path = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DropResourceRequest {
            return DropResourceRequest.deserialize(bytes);
        }
    }
    export class DropResourceResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation?: dependency_1.Ydb.Operations.Operation;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation" in data && data.operation != undefined) {
                    this.operation = data.operation;
                }
            }
        }
        get operation() {
            return pb_1.Message.getWrapperField(this, dependency_1.Ydb.Operations.Operation, 1) as dependency_1.Ydb.Operations.Operation;
        }
        set operation(value: dependency_1.Ydb.Operations.Operation) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data: {
            operation?: ReturnType<typeof dependency_1.Ydb.Operations.Operation.prototype.toObject>;
        }): DropResourceResponse {
            const message = new DropResourceResponse({});
            if (data.operation != null) {
                message.operation = dependency_1.Ydb.Operations.Operation.fromObject(data.operation);
            }
            return message;
        }
        toObject() {
            const data: {
                operation?: ReturnType<typeof dependency_1.Ydb.Operations.Operation.prototype.toObject>;
            } = {};
            if (this.operation != null) {
                data.operation = this.operation.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation)
                writer.writeMessage(1, this.operation, () => this.operation.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DropResourceResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DropResourceResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation, () => message.operation = dependency_1.Ydb.Operations.Operation.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DropResourceResponse {
            return DropResourceResponse.deserialize(bytes);
        }
    }
    export class DropResourceResult extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): DropResourceResult {
            const message = new DropResourceResult({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DropResourceResult {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DropResourceResult();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DropResourceResult {
            return DropResourceResult.deserialize(bytes);
        }
    }
    export class ListResourcesRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation_params?: dependency_1.Ydb.Operations.OperationParams;
            coordination_node_path?: string;
            resource_path?: string;
            recursive?: boolean;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation_params" in data && data.operation_params != undefined) {
                    this.operation_params = data.operation_params;
                }
                if ("coordination_node_path" in data && data.coordination_node_path != undefined) {
                    this.coordination_node_path = data.coordination_node_path;
                }
                if ("resource_path" in data && data.resource_path != undefined) {
                    this.resource_path = data.resource_path;
                }
                if ("recursive" in data && data.recursive != undefined) {
                    this.recursive = data.recursive;
                }
            }
        }
        get operation_params() {
            return pb_1.Message.getWrapperField(this, dependency_1.Ydb.Operations.OperationParams, 1) as dependency_1.Ydb.Operations.OperationParams;
        }
        set operation_params(value: dependency_1.Ydb.Operations.OperationParams) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation_params() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get coordination_node_path() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set coordination_node_path(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get resource_path() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set resource_path(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get recursive() {
            return pb_1.Message.getFieldWithDefault(this, 4, false) as boolean;
        }
        set recursive(value: boolean) {
            pb_1.Message.setField(this, 4, value);
        }
        static fromObject(data: {
            operation_params?: ReturnType<typeof dependency_1.Ydb.Operations.OperationParams.prototype.toObject>;
            coordination_node_path?: string;
            resource_path?: string;
            recursive?: boolean;
        }): ListResourcesRequest {
            const message = new ListResourcesRequest({});
            if (data.operation_params != null) {
                message.operation_params = dependency_1.Ydb.Operations.OperationParams.fromObject(data.operation_params);
            }
            if (data.coordination_node_path != null) {
                message.coordination_node_path = data.coordination_node_path;
            }
            if (data.resource_path != null) {
                message.resource_path = data.resource_path;
            }
            if (data.recursive != null) {
                message.recursive = data.recursive;
            }
            return message;
        }
        toObject() {
            const data: {
                operation_params?: ReturnType<typeof dependency_1.Ydb.Operations.OperationParams.prototype.toObject>;
                coordination_node_path?: string;
                resource_path?: string;
                recursive?: boolean;
            } = {};
            if (this.operation_params != null) {
                data.operation_params = this.operation_params.toObject();
            }
            if (this.coordination_node_path != null) {
                data.coordination_node_path = this.coordination_node_path;
            }
            if (this.resource_path != null) {
                data.resource_path = this.resource_path;
            }
            if (this.recursive != null) {
                data.recursive = this.recursive;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation_params)
                writer.writeMessage(1, this.operation_params, () => this.operation_params.serialize(writer));
            if (this.coordination_node_path.length)
                writer.writeString(2, this.coordination_node_path);
            if (this.resource_path.length)
                writer.writeString(3, this.resource_path);
            if (this.recursive != false)
                writer.writeBool(4, this.recursive);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ListResourcesRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ListResourcesRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation_params, () => message.operation_params = dependency_1.Ydb.Operations.OperationParams.deserialize(reader));
                        break;
                    case 2:
                        message.coordination_node_path = reader.readString();
                        break;
                    case 3:
                        message.resource_path = reader.readString();
                        break;
                    case 4:
                        message.recursive = reader.readBool();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ListResourcesRequest {
            return ListResourcesRequest.deserialize(bytes);
        }
    }
    export class ListResourcesResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation?: dependency_1.Ydb.Operations.Operation;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation" in data && data.operation != undefined) {
                    this.operation = data.operation;
                }
            }
        }
        get operation() {
            return pb_1.Message.getWrapperField(this, dependency_1.Ydb.Operations.Operation, 1) as dependency_1.Ydb.Operations.Operation;
        }
        set operation(value: dependency_1.Ydb.Operations.Operation) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data: {
            operation?: ReturnType<typeof dependency_1.Ydb.Operations.Operation.prototype.toObject>;
        }): ListResourcesResponse {
            const message = new ListResourcesResponse({});
            if (data.operation != null) {
                message.operation = dependency_1.Ydb.Operations.Operation.fromObject(data.operation);
            }
            return message;
        }
        toObject() {
            const data: {
                operation?: ReturnType<typeof dependency_1.Ydb.Operations.Operation.prototype.toObject>;
            } = {};
            if (this.operation != null) {
                data.operation = this.operation.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation)
                writer.writeMessage(1, this.operation, () => this.operation.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ListResourcesResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ListResourcesResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation, () => message.operation = dependency_1.Ydb.Operations.Operation.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ListResourcesResponse {
            return ListResourcesResponse.deserialize(bytes);
        }
    }
    export class ListResourcesResult extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            resource_paths?: string[];
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [1], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("resource_paths" in data && data.resource_paths != undefined) {
                    this.resource_paths = data.resource_paths;
                }
            }
        }
        get resource_paths() {
            return pb_1.Message.getFieldWithDefault(this, 1, []) as string[];
        }
        set resource_paths(value: string[]) {
            pb_1.Message.setField(this, 1, value);
        }
        static fromObject(data: {
            resource_paths?: string[];
        }): ListResourcesResult {
            const message = new ListResourcesResult({});
            if (data.resource_paths != null) {
                message.resource_paths = data.resource_paths;
            }
            return message;
        }
        toObject() {
            const data: {
                resource_paths?: string[];
            } = {};
            if (this.resource_paths != null) {
                data.resource_paths = this.resource_paths;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.resource_paths.length)
                writer.writeRepeatedString(1, this.resource_paths);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): ListResourcesResult {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new ListResourcesResult();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        pb_1.Message.addToRepeatedField(message, 1, reader.readString());
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): ListResourcesResult {
            return ListResourcesResult.deserialize(bytes);
        }
    }
    export class DescribeResourceRequest extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation_params?: dependency_1.Ydb.Operations.OperationParams;
            coordination_node_path?: string;
            resource_path?: string;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation_params" in data && data.operation_params != undefined) {
                    this.operation_params = data.operation_params;
                }
                if ("coordination_node_path" in data && data.coordination_node_path != undefined) {
                    this.coordination_node_path = data.coordination_node_path;
                }
                if ("resource_path" in data && data.resource_path != undefined) {
                    this.resource_path = data.resource_path;
                }
            }
        }
        get operation_params() {
            return pb_1.Message.getWrapperField(this, dependency_1.Ydb.Operations.OperationParams, 1) as dependency_1.Ydb.Operations.OperationParams;
        }
        set operation_params(value: dependency_1.Ydb.Operations.OperationParams) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation_params() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get coordination_node_path() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set coordination_node_path(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get resource_path() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set resource_path(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        static fromObject(data: {
            operation_params?: ReturnType<typeof dependency_1.Ydb.Operations.OperationParams.prototype.toObject>;
            coordination_node_path?: string;
            resource_path?: string;
        }): DescribeResourceRequest {
            const message = new DescribeResourceRequest({});
            if (data.operation_params != null) {
                message.operation_params = dependency_1.Ydb.Operations.OperationParams.fromObject(data.operation_params);
            }
            if (data.coordination_node_path != null) {
                message.coordination_node_path = data.coordination_node_path;
            }
            if (data.resource_path != null) {
                message.resource_path = data.resource_path;
            }
            return message;
        }
        toObject() {
            const data: {
                operation_params?: ReturnType<typeof dependency_1.Ydb.Operations.OperationParams.prototype.toObject>;
                coordination_node_path?: string;
                resource_path?: string;
            } = {};
            if (this.operation_params != null) {
                data.operation_params = this.operation_params.toObject();
            }
            if (this.coordination_node_path != null) {
                data.coordination_node_path = this.coordination_node_path;
            }
            if (this.resource_path != null) {
                data.resource_path = this.resource_path;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation_params)
                writer.writeMessage(1, this.operation_params, () => this.operation_params.serialize(writer));
            if (this.coordination_node_path.length)
                writer.writeString(2, this.coordination_node_path);
            if (this.resource_path.length)
                writer.writeString(3, this.resource_path);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DescribeResourceRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DescribeResourceRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation_params, () => message.operation_params = dependency_1.Ydb.Operations.OperationParams.deserialize(reader));
                        break;
                    case 2:
                        message.coordination_node_path = reader.readString();
                        break;
                    case 3:
                        message.resource_path = reader.readString();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DescribeResourceRequest {
            return DescribeResourceRequest.deserialize(bytes);
        }
    }
    export class DescribeResourceResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation?: dependency_1.Ydb.Operations.Operation;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation" in data && data.operation != undefined) {
                    this.operation = data.operation;
                }
            }
        }
        get operation() {
            return pb_1.Message.getWrapperField(this, dependency_1.Ydb.Operations.Operation, 1) as dependency_1.Ydb.Operations.Operation;
        }
        set operation(value: dependency_1.Ydb.Operations.Operation) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data: {
            operation?: ReturnType<typeof dependency_1.Ydb.Operations.Operation.prototype.toObject>;
        }): DescribeResourceResponse {
            const message = new DescribeResourceResponse({});
            if (data.operation != null) {
                message.operation = dependency_1.Ydb.Operations.Operation.fromObject(data.operation);
            }
            return message;
        }
        toObject() {
            const data: {
                operation?: ReturnType<typeof dependency_1.Ydb.Operations.Operation.prototype.toObject>;
            } = {};
            if (this.operation != null) {
                data.operation = this.operation.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation)
                writer.writeMessage(1, this.operation, () => this.operation.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DescribeResourceResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DescribeResourceResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation, () => message.operation = dependency_1.Ydb.Operations.Operation.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DescribeResourceResponse {
            return DescribeResourceResponse.deserialize(bytes);
        }
    }
    export class DescribeResourceResult extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            resource?: Resource;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("resource" in data && data.resource != undefined) {
                    this.resource = data.resource;
                }
            }
        }
        get resource() {
            return pb_1.Message.getWrapperField(this, Resource, 1) as Resource;
        }
        set resource(value: Resource) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_resource() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data: {
            resource?: ReturnType<typeof Resource.prototype.toObject>;
        }): DescribeResourceResult {
            const message = new DescribeResourceResult({});
            if (data.resource != null) {
                message.resource = Resource.fromObject(data.resource);
            }
            return message;
        }
        toObject() {
            const data: {
                resource?: ReturnType<typeof Resource.prototype.toObject>;
            } = {};
            if (this.resource != null) {
                data.resource = this.resource.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_resource)
                writer.writeMessage(1, this.resource, () => this.resource.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): DescribeResourceResult {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new DescribeResourceResult();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.resource, () => message.resource = Resource.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): DescribeResourceResult {
            return DescribeResourceResult.deserialize(bytes);
        }
    }
    export class AcquireResourceRequest extends pb_1.Message {
        #one_of_decls: number[][] = [[4, 5]];
        constructor(data?: any[] | ({
            operation_params?: dependency_1.Ydb.Operations.OperationParams;
            coordination_node_path?: string;
            resource_path?: string;
        } & (({
            required?: number;
            used?: never;
        } | {
            required?: never;
            used?: number;
        })))) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation_params" in data && data.operation_params != undefined) {
                    this.operation_params = data.operation_params;
                }
                if ("coordination_node_path" in data && data.coordination_node_path != undefined) {
                    this.coordination_node_path = data.coordination_node_path;
                }
                if ("resource_path" in data && data.resource_path != undefined) {
                    this.resource_path = data.resource_path;
                }
                if ("required" in data && data.required != undefined) {
                    this.required = data.required;
                }
                if ("used" in data && data.used != undefined) {
                    this.used = data.used;
                }
            }
        }
        get operation_params() {
            return pb_1.Message.getWrapperField(this, dependency_1.Ydb.Operations.OperationParams, 1) as dependency_1.Ydb.Operations.OperationParams;
        }
        set operation_params(value: dependency_1.Ydb.Operations.OperationParams) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation_params() {
            return pb_1.Message.getField(this, 1) != null;
        }
        get coordination_node_path() {
            return pb_1.Message.getFieldWithDefault(this, 2, "") as string;
        }
        set coordination_node_path(value: string) {
            pb_1.Message.setField(this, 2, value);
        }
        get resource_path() {
            return pb_1.Message.getFieldWithDefault(this, 3, "") as string;
        }
        set resource_path(value: string) {
            pb_1.Message.setField(this, 3, value);
        }
        get required() {
            return pb_1.Message.getFieldWithDefault(this, 4, 0) as number;
        }
        set required(value: number) {
            pb_1.Message.setOneofField(this, 4, this.#one_of_decls[0], value);
        }
        get has_required() {
            return pb_1.Message.getField(this, 4) != null;
        }
        get used() {
            return pb_1.Message.getFieldWithDefault(this, 5, 0) as number;
        }
        set used(value: number) {
            pb_1.Message.setOneofField(this, 5, this.#one_of_decls[0], value);
        }
        get has_used() {
            return pb_1.Message.getField(this, 5) != null;
        }
        get units() {
            const cases: {
                [index: number]: "none" | "required" | "used";
            } = {
                0: "none",
                4: "required",
                5: "used"
            };
            return cases[pb_1.Message.computeOneofCase(this, [4, 5])];
        }
        static fromObject(data: {
            operation_params?: ReturnType<typeof dependency_1.Ydb.Operations.OperationParams.prototype.toObject>;
            coordination_node_path?: string;
            resource_path?: string;
            required?: number;
            used?: number;
        }): AcquireResourceRequest {
            const message = new AcquireResourceRequest({});
            if (data.operation_params != null) {
                message.operation_params = dependency_1.Ydb.Operations.OperationParams.fromObject(data.operation_params);
            }
            if (data.coordination_node_path != null) {
                message.coordination_node_path = data.coordination_node_path;
            }
            if (data.resource_path != null) {
                message.resource_path = data.resource_path;
            }
            if (data.required != null) {
                message.required = data.required;
            }
            if (data.used != null) {
                message.used = data.used;
            }
            return message;
        }
        toObject() {
            const data: {
                operation_params?: ReturnType<typeof dependency_1.Ydb.Operations.OperationParams.prototype.toObject>;
                coordination_node_path?: string;
                resource_path?: string;
                required?: number;
                used?: number;
            } = {};
            if (this.operation_params != null) {
                data.operation_params = this.operation_params.toObject();
            }
            if (this.coordination_node_path != null) {
                data.coordination_node_path = this.coordination_node_path;
            }
            if (this.resource_path != null) {
                data.resource_path = this.resource_path;
            }
            if (this.required != null) {
                data.required = this.required;
            }
            if (this.used != null) {
                data.used = this.used;
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation_params)
                writer.writeMessage(1, this.operation_params, () => this.operation_params.serialize(writer));
            if (this.coordination_node_path.length)
                writer.writeString(2, this.coordination_node_path);
            if (this.resource_path.length)
                writer.writeString(3, this.resource_path);
            if (this.has_required)
                writer.writeUint64(4, this.required);
            if (this.has_used)
                writer.writeUint64(5, this.used);
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AcquireResourceRequest {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AcquireResourceRequest();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation_params, () => message.operation_params = dependency_1.Ydb.Operations.OperationParams.deserialize(reader));
                        break;
                    case 2:
                        message.coordination_node_path = reader.readString();
                        break;
                    case 3:
                        message.resource_path = reader.readString();
                        break;
                    case 4:
                        message.required = reader.readUint64();
                        break;
                    case 5:
                        message.used = reader.readUint64();
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AcquireResourceRequest {
            return AcquireResourceRequest.deserialize(bytes);
        }
    }
    export class AcquireResourceResponse extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {
            operation?: dependency_1.Ydb.Operations.Operation;
        }) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") {
                if ("operation" in data && data.operation != undefined) {
                    this.operation = data.operation;
                }
            }
        }
        get operation() {
            return pb_1.Message.getWrapperField(this, dependency_1.Ydb.Operations.Operation, 1) as dependency_1.Ydb.Operations.Operation;
        }
        set operation(value: dependency_1.Ydb.Operations.Operation) {
            pb_1.Message.setWrapperField(this, 1, value);
        }
        get has_operation() {
            return pb_1.Message.getField(this, 1) != null;
        }
        static fromObject(data: {
            operation?: ReturnType<typeof dependency_1.Ydb.Operations.Operation.prototype.toObject>;
        }): AcquireResourceResponse {
            const message = new AcquireResourceResponse({});
            if (data.operation != null) {
                message.operation = dependency_1.Ydb.Operations.Operation.fromObject(data.operation);
            }
            return message;
        }
        toObject() {
            const data: {
                operation?: ReturnType<typeof dependency_1.Ydb.Operations.Operation.prototype.toObject>;
            } = {};
            if (this.operation != null) {
                data.operation = this.operation.toObject();
            }
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (this.has_operation)
                writer.writeMessage(1, this.operation, () => this.operation.serialize(writer));
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AcquireResourceResponse {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AcquireResourceResponse();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    case 1:
                        reader.readMessage(message.operation, () => message.operation = dependency_1.Ydb.Operations.Operation.deserialize(reader));
                        break;
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AcquireResourceResponse {
            return AcquireResourceResponse.deserialize(bytes);
        }
    }
    export class AcquireResourceResult extends pb_1.Message {
        #one_of_decls: number[][] = [];
        constructor(data?: any[] | {}) {
            super();
            pb_1.Message.initialize(this, Array.isArray(data) ? data : [], 0, -1, [], this.#one_of_decls);
            if (!Array.isArray(data) && typeof data == "object") { }
        }
        static fromObject(data: {}): AcquireResourceResult {
            const message = new AcquireResourceResult({});
            return message;
        }
        toObject() {
            const data: {} = {};
            return data;
        }
        serialize(): Uint8Array;
        serialize(w: pb_1.BinaryWriter): void;
        serialize(w?: pb_1.BinaryWriter): Uint8Array | void {
            const writer = w || new pb_1.BinaryWriter();
            if (!w)
                return writer.getResultBuffer();
        }
        static deserialize(bytes: Uint8Array | pb_1.BinaryReader): AcquireResourceResult {
            const reader = bytes instanceof pb_1.BinaryReader ? bytes : new pb_1.BinaryReader(bytes), message = new AcquireResourceResult();
            while (reader.nextField()) {
                if (reader.isEndGroup())
                    break;
                switch (reader.getFieldNumber()) {
                    default: reader.skipField();
                }
            }
            return message;
        }
        serializeBinary(): Uint8Array {
            return this.serialize();
        }
        static deserializeBinary(bytes: Uint8Array): AcquireResourceResult {
            return AcquireResourceResult.deserialize(bytes);
        }
    }
}
