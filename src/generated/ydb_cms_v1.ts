/**
 * Generated by the protoc-gen-ts.  DO NOT EDIT!
 * compiler version: 0.0.0
 * source: ydb_cms_v1.proto
 * git: https://github.com/thesayyn/protoc-gen-ts */
import * as dependency_1 from "./protos/ydb_cms";
import * as grpc_1 from "@grpc/grpc-js";
export namespace Ydb.Cms.V1 {
    interface GrpcUnaryServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
        (message: P, callback: grpc_1.requestCallback<R>): grpc_1.ClientUnaryCall;
    }
    interface GrpcStreamServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
        (message: P, options?: grpc_1.CallOptions): grpc_1.ClientReadableStream<R>;
    }
    interface GrpWritableServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (metadata: grpc_1.Metadata, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (options: grpc_1.CallOptions, callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
        (callback: grpc_1.requestCallback<R>): grpc_1.ClientWritableStream<P>;
    }
    interface GrpcChunkServiceInterface<P, R> {
        (metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
        (options?: grpc_1.CallOptions): grpc_1.ClientDuplexStream<P, R>;
    }
    interface GrpcPromiseServiceInterface<P, R> {
        (message: P, metadata: grpc_1.Metadata, options?: grpc_1.CallOptions): Promise<R>;
        (message: P, options?: grpc_1.CallOptions): Promise<R>;
    }
    export abstract class UnimplementedCmsServiceService {
        static definition = {
            CreateDatabase: {
                path: "/Ydb.Cms.V1.CmsService/CreateDatabase",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.Ydb.Cms.CreateDatabaseRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.Ydb.Cms.CreateDatabaseRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.Ydb.Cms.CreateDatabaseResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.Ydb.Cms.CreateDatabaseResponse.deserialize(new Uint8Array(bytes))
            },
            GetDatabaseStatus: {
                path: "/Ydb.Cms.V1.CmsService/GetDatabaseStatus",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.Ydb.Cms.GetDatabaseStatusRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.Ydb.Cms.GetDatabaseStatusRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.Ydb.Cms.GetDatabaseStatusResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.Ydb.Cms.GetDatabaseStatusResponse.deserialize(new Uint8Array(bytes))
            },
            AlterDatabase: {
                path: "/Ydb.Cms.V1.CmsService/AlterDatabase",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.Ydb.Cms.AlterDatabaseRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.Ydb.Cms.AlterDatabaseRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.Ydb.Cms.AlterDatabaseResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.Ydb.Cms.AlterDatabaseResponse.deserialize(new Uint8Array(bytes))
            },
            ListDatabases: {
                path: "/Ydb.Cms.V1.CmsService/ListDatabases",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.Ydb.Cms.ListDatabasesRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.Ydb.Cms.ListDatabasesRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.Ydb.Cms.ListDatabasesResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.Ydb.Cms.ListDatabasesResponse.deserialize(new Uint8Array(bytes))
            },
            RemoveDatabase: {
                path: "/Ydb.Cms.V1.CmsService/RemoveDatabase",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.Ydb.Cms.RemoveDatabaseRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.Ydb.Cms.RemoveDatabaseRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.Ydb.Cms.RemoveDatabaseResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.Ydb.Cms.RemoveDatabaseResponse.deserialize(new Uint8Array(bytes))
            },
            DescribeDatabaseOptions: {
                path: "/Ydb.Cms.V1.CmsService/DescribeDatabaseOptions",
                requestStream: false,
                responseStream: false,
                requestSerialize: (message: dependency_1.Ydb.Cms.DescribeDatabaseOptionsRequest) => Buffer.from(message.serialize()),
                requestDeserialize: (bytes: Buffer) => dependency_1.Ydb.Cms.DescribeDatabaseOptionsRequest.deserialize(new Uint8Array(bytes)),
                responseSerialize: (message: dependency_1.Ydb.Cms.DescribeDatabaseOptionsResponse) => Buffer.from(message.serialize()),
                responseDeserialize: (bytes: Buffer) => dependency_1.Ydb.Cms.DescribeDatabaseOptionsResponse.deserialize(new Uint8Array(bytes))
            }
        };
        [method: string]: grpc_1.UntypedHandleCall;
        abstract CreateDatabase(call: grpc_1.ServerUnaryCall<dependency_1.Ydb.Cms.CreateDatabaseRequest, dependency_1.Ydb.Cms.CreateDatabaseResponse>, callback: grpc_1.sendUnaryData<dependency_1.Ydb.Cms.CreateDatabaseResponse>): void;
        abstract GetDatabaseStatus(call: grpc_1.ServerUnaryCall<dependency_1.Ydb.Cms.GetDatabaseStatusRequest, dependency_1.Ydb.Cms.GetDatabaseStatusResponse>, callback: grpc_1.sendUnaryData<dependency_1.Ydb.Cms.GetDatabaseStatusResponse>): void;
        abstract AlterDatabase(call: grpc_1.ServerUnaryCall<dependency_1.Ydb.Cms.AlterDatabaseRequest, dependency_1.Ydb.Cms.AlterDatabaseResponse>, callback: grpc_1.sendUnaryData<dependency_1.Ydb.Cms.AlterDatabaseResponse>): void;
        abstract ListDatabases(call: grpc_1.ServerUnaryCall<dependency_1.Ydb.Cms.ListDatabasesRequest, dependency_1.Ydb.Cms.ListDatabasesResponse>, callback: grpc_1.sendUnaryData<dependency_1.Ydb.Cms.ListDatabasesResponse>): void;
        abstract RemoveDatabase(call: grpc_1.ServerUnaryCall<dependency_1.Ydb.Cms.RemoveDatabaseRequest, dependency_1.Ydb.Cms.RemoveDatabaseResponse>, callback: grpc_1.sendUnaryData<dependency_1.Ydb.Cms.RemoveDatabaseResponse>): void;
        abstract DescribeDatabaseOptions(call: grpc_1.ServerUnaryCall<dependency_1.Ydb.Cms.DescribeDatabaseOptionsRequest, dependency_1.Ydb.Cms.DescribeDatabaseOptionsResponse>, callback: grpc_1.sendUnaryData<dependency_1.Ydb.Cms.DescribeDatabaseOptionsResponse>): void;
    }
    export class CmsServiceClient extends grpc_1.makeGenericClientConstructor(UnimplementedCmsServiceService.definition, "CmsService", {}) {
        constructor(address: string, credentials: grpc_1.ChannelCredentials, options?: Partial<grpc_1.ChannelOptions>) {
            super(address, credentials, options);
        }
        CreateDatabase: GrpcUnaryServiceInterface<dependency_1.Ydb.Cms.CreateDatabaseRequest, dependency_1.Ydb.Cms.CreateDatabaseResponse> = (message: dependency_1.Ydb.Cms.CreateDatabaseRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Cms.CreateDatabaseResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Cms.CreateDatabaseResponse>, callback?: grpc_1.requestCallback<dependency_1.Ydb.Cms.CreateDatabaseResponse>): grpc_1.ClientUnaryCall => {
            return super.CreateDatabase(message, metadata, options, callback);
        };
        GetDatabaseStatus: GrpcUnaryServiceInterface<dependency_1.Ydb.Cms.GetDatabaseStatusRequest, dependency_1.Ydb.Cms.GetDatabaseStatusResponse> = (message: dependency_1.Ydb.Cms.GetDatabaseStatusRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Cms.GetDatabaseStatusResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Cms.GetDatabaseStatusResponse>, callback?: grpc_1.requestCallback<dependency_1.Ydb.Cms.GetDatabaseStatusResponse>): grpc_1.ClientUnaryCall => {
            return super.GetDatabaseStatus(message, metadata, options, callback);
        };
        AlterDatabase: GrpcUnaryServiceInterface<dependency_1.Ydb.Cms.AlterDatabaseRequest, dependency_1.Ydb.Cms.AlterDatabaseResponse> = (message: dependency_1.Ydb.Cms.AlterDatabaseRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Cms.AlterDatabaseResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Cms.AlterDatabaseResponse>, callback?: grpc_1.requestCallback<dependency_1.Ydb.Cms.AlterDatabaseResponse>): grpc_1.ClientUnaryCall => {
            return super.AlterDatabase(message, metadata, options, callback);
        };
        ListDatabases: GrpcUnaryServiceInterface<dependency_1.Ydb.Cms.ListDatabasesRequest, dependency_1.Ydb.Cms.ListDatabasesResponse> = (message: dependency_1.Ydb.Cms.ListDatabasesRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Cms.ListDatabasesResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Cms.ListDatabasesResponse>, callback?: grpc_1.requestCallback<dependency_1.Ydb.Cms.ListDatabasesResponse>): grpc_1.ClientUnaryCall => {
            return super.ListDatabases(message, metadata, options, callback);
        };
        RemoveDatabase: GrpcUnaryServiceInterface<dependency_1.Ydb.Cms.RemoveDatabaseRequest, dependency_1.Ydb.Cms.RemoveDatabaseResponse> = (message: dependency_1.Ydb.Cms.RemoveDatabaseRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Cms.RemoveDatabaseResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Cms.RemoveDatabaseResponse>, callback?: grpc_1.requestCallback<dependency_1.Ydb.Cms.RemoveDatabaseResponse>): grpc_1.ClientUnaryCall => {
            return super.RemoveDatabase(message, metadata, options, callback);
        };
        DescribeDatabaseOptions: GrpcUnaryServiceInterface<dependency_1.Ydb.Cms.DescribeDatabaseOptionsRequest, dependency_1.Ydb.Cms.DescribeDatabaseOptionsResponse> = (message: dependency_1.Ydb.Cms.DescribeDatabaseOptionsRequest, metadata: grpc_1.Metadata | grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Cms.DescribeDatabaseOptionsResponse>, options?: grpc_1.CallOptions | grpc_1.requestCallback<dependency_1.Ydb.Cms.DescribeDatabaseOptionsResponse>, callback?: grpc_1.requestCallback<dependency_1.Ydb.Cms.DescribeDatabaseOptionsResponse>): grpc_1.ClientUnaryCall => {
            return super.DescribeDatabaseOptions(message, metadata, options, callback);
        };
    }
}
